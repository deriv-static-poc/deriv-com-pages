{"version":3,"file":"component---src-pages-trader-tools-swap-calculator-index-tsx-04842051cb4eaaf076ae.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/trader-tools/common/_underlying-data.tsx","webpack://deriv-com/./src/pages/trader-tools/swap-calculator/_swap-calculator.tsx","webpack://deriv-com/./src/pages/trader-tools/swap-calculator/index.tsx"],"sourcesContent":["import React from 'react'\nimport {\n    AUDCAD,\n    AUDCHF,\n    AUDBASKET,\n    AUDJPY,\n    AUDNZD,\n    AUDUSD,\n    AUS200,\n    BOOM1000,\n    BOOM500,\n    BOOM300EU,\n    BTCUSD,\n    CRASH1000,\n    CRASH500,\n    CRASH300EU,\n    ETHUSD,\n    EUR50,\n    EURAUD,\n    EURCAD,\n    EURCHF,\n    EURGBP,\n    EURBASKET,\n    EURJPY,\n    EURNZD,\n    EURUSD,\n    FRA40,\n    GBPAUD,\n    GBPCAD,\n    GBPCHF,\n    GBPBASKET,\n    GBPJPY,\n    GBPNZD,\n    GBPUSD,\n    GOLDUSD,\n    GOLDBASKET,\n    INDEX10,\n    INDEX100,\n    INDEX100S1,\n    INDEX10S1,\n    INDEX25,\n    INDEX25S1,\n    INDEX50,\n    INDEX50S1,\n    INDEX75,\n    INDEX75S1,\n    JP225,\n    JUMP10NEW,\n    JUMP25NEW,\n    JUMP50NEW,\n    JUMP75NEW,\n    JUMP100NEW,\n    MARKETBEARNEW,\n    MARKETBULLNEW,\n    NZDJPY,\n    NZDUSD,\n    PALLADIUMUSD,\n    PLATINUMUSD,\n    SILVERUSD,\n    STEPINDICES,\n    STOCKSHONGKONG50,\n    STOCKSGERMANY30,\n    STOCKSSWISS20,\n    STOCKSUS500,\n    STOCKSUSTECH100,\n    STOCKSWALLSTREET30,\n    UK100,\n    USDCAD,\n    USDCHF,\n    USDMXN,\n    USDNOK,\n    USDPLN,\n    USDSEK,\n    USDBASKET,\n    USDJPY,\n    VINDEXIC200,\n    VINDEXIC300,\n} from 'components/elements/symbols'\n\nexport const optionItemDefault = {\n    name: 'default',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const optionLeverageDefault = {\n    name: 'value',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const leverageItemLists = [\n    { name: 4000, display_name: 4000, key: '1', icon: '' },\n    { name: 3500, display_name: 3500, key: '2', icon: '' },\n    { name: 3000, display_name: 3000, key: '3', icon: '' },\n    { name: 2500, display_name: 2500, key: '4', icon: '' },\n    { name: 2000, display_name: 2000, key: '5', icon: '' },\n    { name: 1500, display_name: 1500, key: '6', icon: '' },\n    { name: 1000, display_name: 1000, key: '7', icon: '' },\n    { name: 900, display_name: 900, key: '8', icon: '' },\n    { name: 800, display_name: 800, key: '9', icon: '' },\n    { name: 700, display_name: 700, key: '10', icon: '' },\n    { name: 600, display_name: 600, key: '11', icon: '' },\n    { name: 500, display_name: 500, key: '12', icon: '' },\n    { name: 400, display_name: 400, key: '13', icon: '' },\n    { name: 200, display_name: 200, key: '14', icon: '' },\n    { name: 100, display_name: 100, key: '15', icon: '' },\n    { name: 50, display_name: 50, key: '16', icon: '' },\n    { name: 30, display_name: 30, key: '17', icon: '' },\n    { name: 5, display_name: 5, key: '18', icon: '' },\n]\n\nexport const syntheticItemLists = [\n    {\n        name: 'Boom 1000 Index',\n        display_name: 'Boom 1000 Index',\n        icon: <img src={BOOM1000} alt=\"boom 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM1000',\n    },\n    {\n        name: 'Boom 500 Index',\n        display_name: 'Boom 500 Index',\n        icon: <img src={BOOM500} alt=\"boom 500\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM500',\n    },\n    {\n        name: 'Boom 300 Index',\n        display_name: 'Boom 300 Index',\n        icon: <img src={BOOM300EU} alt=\"boom 300\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM300N',\n    },\n    {\n        name: 'Crash 1000 Index',\n        display_name: 'Crash 1000 Index',\n        icon: <img src={CRASH1000} alt=\"crash 1000\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH1000',\n    },\n    {\n        name: 'Crash 500 Index',\n        display_name: 'Crash 500 Index',\n        icon: <img src={CRASH500} alt=\"crash 500\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH500',\n    },\n    {\n        name: 'Crash 300 Index',\n        display_name: 'Crash 300 Index',\n        icon: <img src={CRASH300EU} alt=\"crash 300\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH300N',\n    },\n    {\n        name: 'Step Index',\n        display_name: 'Step Index',\n        icon: <img src={STEPINDICES} alt=\"step index\" />,\n        market: 'synthetic_indices',\n        symbol: 'stpRNG',\n    },\n    {\n        name: 'Bear Market Index',\n        display_name: 'Bear Market Index',\n        icon: <img src={MARKETBEARNEW} alt=\"bear market index\" />,\n        market: 'synthetic_indices',\n        symbol: 'RDBEAR',\n    },\n    {\n        name: 'Bull Market Index',\n        display_name: 'Bull Market Index',\n        icon: <img src={MARKETBULLNEW} alt=\"bull market index\" />,\n        market: 'synthetic_indices',\n        symbol: 'RDBULL',\n    },\n    {\n        name: 'Volatility 10 (1s) Index',\n        display_name: 'Volatility 10 (1s) Index',\n        icon: <img src={INDEX10S1} alt=\"vol 10 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ10V',\n    },\n    {\n        name: 'Volatility 10 Index',\n        display_name: 'Volatility 10 Index',\n        icon: <img src={INDEX10} alt=\"vol 10\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_10',\n    },\n    {\n        name: 'Volatility 25 (1s) Index',\n        display_name: 'Volatility 25 (1s) Index',\n        icon: <img src={INDEX25S1} alt=\"vol 25 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ25V',\n    },\n    {\n        name: 'Volatility 25 Index',\n        display_name: 'Volatility 25 Index',\n        icon: <img src={INDEX25} alt=\"\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_25',\n    },\n    {\n        name: 'Volatility 50 (1s) Index',\n        display_name: 'Volatility 50 (1s) Index',\n        icon: <img src={INDEX50S1} alt=\"vol 50 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ50V',\n    },\n    {\n        name: 'Volatility 50 Index',\n        display_name: 'Volatility 50 Index',\n        icon: <img src={INDEX50} alt=\"vol 50\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_50',\n    },\n    {\n        name: 'Volatility 75 (1s) Index',\n        display_name: 'Volatility 75 (1s) Index',\n        icon: <img src={INDEX75S1} alt=\"vol 75 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ75V',\n    },\n    {\n        name: 'Volatility 75 Index',\n        display_name: 'Volatility 75 Index',\n        icon: <img src={INDEX75} alt=\"vol 75\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_75',\n    },\n    {\n        name: 'Volatility 100 (1s) Index',\n        display_name: 'Volatility 100 (1s) Index',\n        icon: <img src={INDEX100S1} alt=\"vol 100 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ100V',\n    },\n    {\n        name: 'Volatility 100 Index',\n        display_name: 'Volatility 100 Index',\n        icon: <img src={INDEX100} alt=\"vol 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_100',\n    },\n    {\n        name: 'Volatility 200 (1s) Index',\n        display_name: 'Volatility 200 (1s) Index',\n        icon: <img src={VINDEXIC200} alt=\"vol 200 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ200V',\n    },\n    {\n        name: 'Volatility 300 (1s) Index',\n        display_name: 'Volatility 300 (1s) Index',\n        icon: <img src={VINDEXIC300} alt=\"vol 300 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ300V',\n    },\n    {\n        name: 'Jump 10 Index',\n        display_name: 'Jump 10 Index',\n        icon: <img src={JUMP10NEW} alt=\"jump 10\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD10',\n    },\n    {\n        name: 'Jump 25 Index',\n        display_name: 'Jump 25 Index',\n        icon: <img src={JUMP25NEW} alt=\"jump 25\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD25',\n    },\n    {\n        name: 'Jump 50 Index',\n        display_name: 'Jump 50 Index',\n        icon: <img src={JUMP50NEW} alt=\"jump 50\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD50',\n    },\n    {\n        name: 'Jump 75 Index',\n        display_name: 'Jump 75 Index',\n        icon: <img src={JUMP75NEW} alt=\"jump 75\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD75',\n    },\n    {\n        name: 'Jump 100 Index',\n        display_name: 'Jump 100 Index',\n        icon: <img src={JUMP100NEW} alt=\"jump 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD100',\n    },\n]\n\nexport const financialItemLists = [\n    {\n        name: 'AUS200',\n        display_name: 'Australian Index',\n        icon: <img src={AUS200} alt=\"australia 200\" />,\n        market: 'other',\n        symbol: 'OTC_AS51',\n    },\n    {\n        name: 'HK50',\n        display_name: 'Hong Kong Index',\n        icon: <img src={STOCKSHONGKONG50} alt=\"hong kong 50\" />,\n        market: 'other',\n        symbol: 'OTC_HSI',\n    },\n    {\n        name: 'JP225',\n        display_name: 'Japanese Index',\n        icon: <img src={JP225} alt=\"japan 225\" />,\n        market: 'other',\n        symbol: 'OTC_N225',\n    },\n    {\n        name: 'EUR50',\n        display_name: 'Euro 50 Index',\n        icon: <img src={EUR50} alt=\"europe 50\" />,\n        market: 'other',\n        symbol: 'OTC_SX5E',\n    },\n    {\n        name: 'FRA40',\n        display_name: 'French Index',\n        icon: <img src={FRA40} alt=\"france 40\" />,\n        market: 'other',\n        symbol: 'OTC_FCHI',\n    },\n    {\n        name: 'GER30',\n        display_name: 'German Index',\n        icon: <img src={STOCKSGERMANY30} alt=\"german 30\" />,\n        market: 'other',\n        symbol: 'OTC_GDAXI',\n    },\n    {\n        name: 'SWISS20',\n        display_name: 'Swiss Index',\n        icon: <img src={STOCKSSWISS20} alt=\"swiss 20\" />,\n        market: 'other',\n        symbol: 'OTC_SSMI',\n    },\n    {\n        name: 'UK100',\n        display_name: 'UK Index',\n        icon: <img src={UK100} alt=\"uk 100\" />,\n        market: 'other',\n        symbol: 'OTC_FTSE',\n    },\n    {\n        name: 'USINDEX',\n        display_name: 'US Index',\n        icon: <img src={STOCKSUS500} alt=\"us 500\" />,\n        market: 'other',\n        symbol: 'OTC_SPC',\n    },\n    {\n        name: 'USTECHINDEX',\n        display_name: 'US Tech Index',\n        icon: <img src={STOCKSUSTECH100} alt=\"us tech 100\" />,\n        market: 'other',\n        symbol: 'OTC_NDX',\n    },\n    {\n        name: 'STOCKSWALLSTREET30',\n        display_name: 'Wall Street 30 Index',\n        icon: <img src={STOCKSWALLSTREET30} alt=\"wall street 30\" />,\n        market: 'other',\n        symbol: 'OTC_DJI',\n    },\n    {\n        name: 'BTCUSD',\n        display_name: 'BTC/USD',\n        icon: <img src={BTCUSD} alt=\"btc usd\" />,\n        market: 'crypto',\n        symbol: 'cryBTCUSD',\n    },\n    {\n        name: 'ETHUSD',\n        display_name: 'ETH/USD',\n        icon: <img src={ETHUSD} alt=\"eth usd\" />,\n        market: 'crypto',\n        symbol: 'cryETHUSD',\n    },\n    {\n        name: 'AUDJPY',\n        display_name: 'AUD/JPY',\n        icon: <img src={AUDJPY} alt=\"aud jpy\" />,\n        market: 'forex',\n        symbol: 'frxAUDJPY',\n    },\n    {\n        name: 'AUDCAD',\n        display_name: 'AUD/CAD',\n        icon: <img src={AUDCAD} alt=\"aud cad\" />,\n        market: 'forex',\n        symbol: 'frxAUDCAD',\n    },\n    {\n        name: 'AUDCHF',\n        display_name: 'AUD/CHF',\n        icon: <img src={AUDCHF} alt=\"aud chf\" />,\n        market: 'forex',\n        symbol: 'frxAUDCHF',\n    },\n    {\n        name: 'AUDNZD',\n        display_name: 'AUD/NZD',\n        icon: <img src={AUDNZD} alt=\"aud nzd\" />,\n        market: 'forex',\n        symbol: 'frxAUDNZD',\n    },\n    {\n        name: 'AUDUSD',\n        display_name: 'AUD/USD',\n        icon: <img src={AUDUSD} alt=\"aud usd\" />,\n        market: 'forex',\n        symbol: 'frxAUDUSD',\n    },\n    {\n        name: 'EURAUD',\n        display_name: 'EUR/AUD',\n        icon: <img src={EURAUD} alt=\"eur aud\" />,\n        market: 'forex',\n        symbol: 'frxEURAUD',\n    },\n    {\n        name: 'EURCAD',\n        display_name: 'EUR/CAD',\n        icon: <img src={EURCAD} alt=\"eur cad\" />,\n        market: 'forex',\n        symbol: 'frxEURCAD',\n    },\n    {\n        name: 'EURCHF',\n        display_name: 'EUR/CHF',\n        icon: <img src={EURCHF} alt=\"eur chf\" />,\n        market: 'forex',\n        symbol: 'frxEURCHF',\n    },\n    {\n        name: 'EURGBP',\n        display_name: 'EUR/GBP',\n        icon: <img src={EURGBP} alt=\"eur gbp\" />,\n        market: 'forex',\n        symbol: 'frxEURGBP',\n    },\n    {\n        name: 'EURJPY',\n        display_name: 'EUR/JPY',\n        icon: <img src={EURJPY} alt=\"eur jpy\" />,\n        market: 'forex',\n        symbol: 'frxEURJPY',\n    },\n    {\n        name: 'EURNZD',\n        display_name: 'EUR/NZD',\n        icon: <img src={EURNZD} alt=\"eur nzd\" />,\n        market: 'forex',\n        symbol: 'frxEURNZD',\n    },\n    {\n        name: 'EURUSD',\n        display_name: 'EUR/USD',\n        icon: <img src={EURUSD} alt=\"eur usd\" />,\n        market: 'forex',\n        symbol: 'frxEURUSD',\n    },\n    {\n        name: 'GBPCHF',\n        display_name: 'GBP/CHF',\n        icon: <img src={GBPCHF} alt=\"gbp chf\" />,\n        market: 'forex',\n        symbol: 'frxGBPCHF',\n    },\n    {\n        name: 'GBPJPY',\n        display_name: 'GBP/JPY',\n        icon: <img src={GBPJPY} alt=\"gbp jpy\" />,\n        market: 'forex',\n        symbol: 'frxGBPJPY',\n    },\n    {\n        name: 'GBPUSD',\n        display_name: 'GBP/USD',\n        icon: <img src={GBPUSD} alt=\"gbp usd\" />,\n        market: 'forex',\n        symbol: 'frxGBPUSD',\n    },\n    {\n        name: 'NZDUSD',\n        display_name: 'NZD/USD',\n        icon: <img src={NZDUSD} alt=\"nzd usd\" />,\n        market: 'forex',\n        symbol: 'frxNZDUSD',\n    },\n    {\n        name: 'USDCAD',\n        display_name: 'USD/CAD',\n        icon: <img src={USDCAD} alt=\"usd cad\" />,\n        market: 'forex',\n        symbol: 'frxUSDCAD',\n    },\n    {\n        name: 'USDCHF',\n        display_name: 'USD/CHF',\n        icon: <img src={USDCHF} alt=\"usd chf\" />,\n        market: 'forex',\n        symbol: 'frxUSDCHF',\n    },\n    {\n        name: 'USDJPY',\n        display_name: 'USD/JPY',\n        icon: <img src={USDJPY} alt=\"usd jpy\" />,\n        market: 'forex',\n        symbol: 'frxUSDJPY',\n    },\n    {\n        name: 'USDMXN',\n        display_name: 'USD/MXN',\n        icon: <img src={USDMXN} alt=\"usd mxn\" />,\n        market: 'forex',\n        symbol: 'frxUSDMXN',\n    },\n    {\n        name: 'USDNOK',\n        display_name: 'USD/NOK',\n        icon: <img src={USDNOK} alt=\"usd nok\" />,\n        market: 'forex',\n        symbol: 'frxUSDNOK',\n    },\n    {\n        name: 'USDPLN',\n        display_name: 'USD/PLN',\n        icon: <img src={USDPLN} alt=\"usd pln\" />,\n        market: 'forex',\n        symbol: 'frxUSDPLN',\n    },\n    {\n        name: 'USDSEK',\n        display_name: 'USD/SEK',\n        icon: <img src={USDSEK} alt=\"usd sek\" />,\n        market: 'forex',\n        symbol: 'frxUSDSEK',\n    },\n    {\n        name: 'GBPAUD',\n        display_name: 'GBP/AUD',\n        icon: <img src={GBPAUD} alt=\"gbp aud\" />,\n        market: 'forex',\n        symbol: 'frxGBPAUD',\n    },\n    {\n        name: 'GBPCAD',\n        display_name: 'GBP/CAD',\n        icon: <img src={GBPCAD} alt=\"gbp cad\" />,\n        market: 'forex',\n        symbol: 'frxGBPCAD',\n    },\n    {\n        name: 'GBPNZD',\n        display_name: 'GBP/NZD',\n        icon: <img src={GBPNZD} alt=\"gbp nzd\" />,\n        market: 'forex',\n        symbol: 'frxGBPNZD',\n    },\n    {\n        name: 'NZDJPY',\n        display_name: 'NZD/JPY',\n        icon: <img src={NZDJPY} alt=\"nzd jpy\" />,\n        market: 'forex',\n        symbol: 'frxNZDJPY',\n    },\n    {\n        name: 'XAUUSD',\n        display_name: 'Gold/USD',\n        icon: <img src={GOLDUSD} alt=\"gold usd\" />,\n        market: 'commodities',\n        symbol: 'OTC_HSI',\n    },\n    {\n        name: 'XAGUSD',\n        display_name: 'Silver/USD',\n        icon: <img src={SILVERUSD} alt=\"silver usd\" />,\n        market: 'commodities',\n        symbol: 'frxXAGUSD',\n    },\n    {\n        name: 'XPDUSD',\n        display_name: 'Palladium/USD',\n        icon: <img src={PALLADIUMUSD} alt=\"palladium usd\" />,\n        market: 'commodities',\n        symbol: 'frxXPDUSD',\n    },\n    {\n        name: 'XPTUSD',\n        display_name: 'Platinum/USD',\n        icon: <img src={PLATINUMUSD} alt=\"platinum usd\" />,\n        market: 'commodities',\n        symbol: 'frxXPTUSD',\n    },\n    {\n        name: 'AUDBASKET',\n        display_name: 'AUD Basket',\n        icon: <img src={AUDBASKET} alt=\"aud basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDAUD',\n    },\n    {\n        name: 'GBPBASKET',\n        display_name: 'GBP Basket',\n        icon: <img src={GBPBASKET} alt=\"gbp basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDGBP',\n    },\n    {\n        name: 'EURBASKET',\n        display_name: 'EUR Basket',\n        icon: <img src={EURBASKET} alt=\"eur basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDEUR',\n    },\n    {\n        name: 'USDBASKET',\n        display_name: 'USD Basket',\n        icon: <img src={USDBASKET} alt=\"usd basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDUSD',\n    },\n    {\n        name: 'GOLDBASKET',\n        display_name: 'Gold Basket',\n        icon: <img src={GOLDBASKET} alt=\"gold basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDXAU',\n    },\n]\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Formik, Field } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport {\n    getSwapChargeSynthetic,\n    getSwapChargeForex,\n    resetValidationSynthetic,\n    resetValidationForex,\n    getContractSize,\n    getCurrency,\n    numberSubmitFormatNegative,\n    numberSubmitFormat,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    optionItemDefault,\n    syntheticItemLists,\n    financialItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    CalculatorOutputContainer,\n    CalculatorOutputField,\n    CalculatorOutputSymbol,\n    ContentContainer,\n    FormulaText,\n    header_style,\n    InputGroup,\n    item_style,\n    LinkWrapper,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapFormWrapper,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Dropdown,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/tools/black-right-arrow.svg'\nimport { useDerivApi } from 'components/hooks/use-deriv-api'\n\ntype FormikErrors<Values> = {\n    [K in keyof Values]?: Values[K] extends string[]\n        ? Values[K][number] extends Record<string, unknown>\n            ? FormikErrors<Values[K][number]>[] | string | string[]\n            : string | string[]\n        : Values[K] extends Record<string, unknown>\n        ? FormikErrors<Values[K]>\n        : string\n}\n\ntype FormikTouched<Values> = {\n    [K in keyof Values]?: Values[K] extends string[]\n        ? Values[K][number] extends Record<string, unknown>\n            ? FormikTouched<Values[K][number]>[]\n            : boolean\n        : Values[K] extends Record<string, unknown>\n        ? FormikTouched<Values[K]>\n        : boolean\n}\n\ntype FormikState<Values> = {\n    values: Values\n    setFieldValue: (field: string, value: string, shouldValidate?: boolean) => void\n    touched: FormikTouched<Values>\n    errors: FormikErrors<Values>\n    handleBlur: {\n        (e: React.FocusEvent<string>): void\n    }\n    setFieldError: (field: string, message: string | undefined) => void\n    setFieldTouched: (field: string, isTouched?: boolean, shouldValidate?: boolean) => void\n}\n\ntype VolumeFieldProps = {\n    volume: string\n}\n\ntype SwapRateFieldProps = {\n    swapRate: string\n}\n\nconst VolumeField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    setFieldError,\n    setFieldTouched,\n}: FormikState<VolumeFieldProps>) => (\n    <Field\n        name=\"volume\"\n        value={values.volume}\n        onChange={(value) => {\n            setFieldValue('volume', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"volume\"\n                type=\"text\"\n                label={localize('Volume')}\n                autoComplete=\"off\"\n                error={touched.volume && errors.volume}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={() => {\n                    setFieldValue('volume', '', false)\n                    setFieldError('volume', '')\n                    setFieldTouched('volume', false, false)\n                }}\n                maxLength={getMaxLength(values.volume, 8)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst SwapRateField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    setFieldError,\n    setFieldTouched,\n}: FormikState<SwapRateFieldProps>) => (\n    <Field\n        name=\"swapRate\"\n        value={values.swapRate}\n        onChange={(value) => {\n            setFieldValue('swapRate', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"swapRate\"\n                type=\"text\"\n                value={values.swapRate}\n                label={localize('Swap rate')}\n                autoComplete=\"off\"\n                error={touched.swapRate && errors.swapRate}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={() => {\n                    setFieldValue('swapRate', '', false)\n                    setFieldError('swapRate', '')\n                    setFieldTouched('swapRate', false, false)\n                }}\n                maxLength={getMaxLength(values.swapRate, 15)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst swap_currency_change_handler = (setFieldValue) => (value) => {\n    setFieldValue('swapCurrency', getCurrency(value))\n    setFieldValue('contractSize', getContractSize(value))\n    setFieldValue('symbol', value)\n}\n\nconst StyledInputGroup = styled(InputGroup)`\n    margin: 0;\n`\n\nconst SwapCalculator = () => {\n    const query = graphql`\n        query {\n            swap_synthetic_formula: file(\n                relativePath: { eq: \"trade-tools/swap-synthetic-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            swap_forex_formula: file(relativePath: { eq: \"trade-tools/swap-forex-formula.png\" }) {\n                ...fadeIn\n            }\n            swap_synthetic_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/swap-synthetic-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            swap_forex_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/swap-forex-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n    const data = useStaticQuery(query)\n\n    const [tab, setTab] = useState('Synthetic')\n    const [activeSymbols, setActiveSymbols] = useState([])\n    const [disableDropdown, setDisableDropdown] = useState(true)\n    const [symbolSpotPrice, setSymbolSpotPrice] = useState({})\n\n    const onTabClick = (t) => {\n        setTab(t)\n    }\n    const deriv_api = useDerivApi()\n\n    useEffect(() => {\n        const { send } = deriv_api\n        send({ active_symbols: 'full' }, (response) => {\n            if (!response.error && response.active_symbols.length > 0) {\n                const data = response.active_symbols\n                setActiveSymbols(data)\n                setDisableDropdown(false)\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        const tempSpotPrice = {}\n        if (activeSymbols.length < 1) {\n            return\n        }\n        activeSymbols.forEach((item) => {\n            tempSpotPrice[item.symbol] = item.spot\n        })\n        setSymbolSpotPrice(tempSpotPrice)\n    }, [activeSymbols])\n\n    const fetchTickData = useCallback(\n        (selectedSymbol, setAssetPrice) => {\n            const price = symbolSpotPrice[selectedSymbol]\n            setAssetPrice('assetPrice', price)\n        },\n        [symbolSpotPrice],\n    )\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('Swap calculator')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our swap calculator helps you to estimate the swap charges required to keep your positions open overnight on Deriv MT5 (DMT5).',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector\n                        active={tab === 'Synthetic'}\n                        onClick={() => onTabClick('Synthetic')}\n                    >\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Synthetic')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Real'} onClick={() => onTabClick('Real')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Financial')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                {tab === 'Synthetic' ? (\n                    <>\n                        <ContentContainer mb=\"4.0rem\">\n                            <SwapFormWrapper>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={{\n                                        swapCharge: 0,\n                                        swapChargeSymbol: 'USD',\n                                        symbol: '',\n                                        volume: '',\n                                        optionList: syntheticItemLists,\n                                        contractSize: '',\n                                        swapRate: '',\n                                        assetPrice: '',\n                                    }}\n                                    validate={resetValidationSynthetic}\n                                    onSubmit={(values, { setFieldValue }) => {\n                                        setFieldValue('swapCharge', getSwapChargeSynthetic(values))\n                                        setFieldValue('volume', numberSubmitFormat(values.volume))\n                                        setFieldValue(\n                                            'swapRate',\n                                            numberSubmitFormatNegative(values.swapRate),\n                                        )\n                                        setFieldValue(\n                                            'assetPrice',\n                                            numberSubmitFormat(values.assetPrice),\n                                        )\n                                    }}\n                                >\n                                    {({\n                                        values,\n                                        setFieldValue,\n                                        handleBlur,\n                                        errors,\n                                        touched,\n                                        setFieldError,\n                                        setFieldTouched,\n                                        isValid,\n                                        dirty,\n                                    }) => (\n                                        <CalculatorForm>\n                                            <CalculatorHeader>\n                                                <CalculatorLabel htmlFor=\"message\">\n                                                    {localize('Swap charge')}\n                                                </CalculatorLabel>\n                                                <CalculatorOutputContainer>\n                                                    <CalculatorOutputField>\n                                                        {values.swapCharge}\n                                                    </CalculatorOutputField>\n                                                    <CalculatorOutputSymbol>\n                                                        {values.swapChargeSymbol}\n                                                    </CalculatorOutputSymbol>\n                                                </CalculatorOutputContainer>\n                                            </CalculatorHeader>\n\n                                            <CalculatorBody>\n                                                <Dropdown\n                                                    mb=\"3.6rem\"\n                                                    option_list={values.optionList}\n                                                    label={localize('Symbol')}\n                                                    default_option={optionItemDefault}\n                                                    selected_option={values.symbol}\n                                                    id=\"symbol\"\n                                                    onChange={(value) => {\n                                                        setFieldValue(\n                                                            'swapCurrency',\n                                                            getCurrency(value),\n                                                        )\n                                                        setFieldValue(\n                                                            'contractSize',\n                                                            getContractSize(value),\n                                                        )\n                                                        setFieldValue('symbol', value)\n                                                        fetchTickData(value.symbol, setFieldValue)\n                                                    }}\n                                                    contractSize={values.contractSize}\n                                                    error={touched.symbol && errors.symbol}\n                                                    onBlur={handleBlur}\n                                                    disabled={disableDropdown}\n                                                />\n\n                                                <InputGroup>\n                                                    <VolumeField\n                                                        values={values}\n                                                        setFieldValue={setFieldValue}\n                                                        touched={touched}\n                                                        errors={errors}\n                                                        handleBlur={handleBlur}\n                                                        setFieldError={setFieldError}\n                                                        setFieldTouched={setFieldTouched}\n                                                    />\n                                                </InputGroup>\n\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"assetPrice\"\n                                                        value={values.assetPrice}\n                                                        onChange={(value) => {\n                                                            setFieldValue('assetPrice', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"asset\"\n                                                                type=\"text\"\n                                                                value={values.assetPrice}\n                                                                label={localize('Asset price')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.assetPrice &&\n                                                                    errors.assetPrice\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={() => {\n                                                                    setFieldValue(\n                                                                        'assetPrice',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('assetPrice', '')\n                                                                    setFieldTouched(\n                                                                        'assetPrice',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                }}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <StyledInputGroup>\n                                                    <SwapRateField\n                                                        values={values}\n                                                        setFieldValue={setFieldValue}\n                                                        touched={touched}\n                                                        errors={errors}\n                                                        handleBlur={handleBlur}\n                                                        setFieldError={setFieldError}\n                                                        setFieldTouched={setFieldTouched}\n                                                    />\n                                                </StyledInputGroup>\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </CalculatorForm>\n                                    )}\n                                </Formik>\n                            </SwapFormWrapper>\n\n                            <RightContent>\n                                <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                    {localize('How to calculate swap charges')}\n                                </Header>\n\n                                <Text>\n                                    <Localize translate_text=\"For synthetic, the swap charge is calculated on an annual basis for long and short positions based on this formula:\" />\n                                </Text>\n                                <Text mb=\"2rem\">\n                                    <Localize\n                                        translate_text=\"<0>Swap charge = volume × contract size × asset price × (swap rate ÷ 100) ÷ 360</0>\"\n                                        components={[<strong key={0} />]}\n                                    />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"This gives you the swap charge in USD.\" />\n                                </Text>\n\n                                <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                    {localize('Example calculation')}\n                                </Header>\n\n                                <Accordion has_single_state>\n                                    <AccordionItem\n                                        header={localize('Swap charge')}\n                                        header_style={header_style}\n                                        style={item_style}\n                                        plus\n                                    >\n                                        <Text mb=\"2rem\">\n                                            {localize(\n                                                'Let’s say you want to keep 0.01 lots of Volatility 75 Index with an asset price of 400,000 USD and swap rate of -7.5 open for one night.',\n                                            )}\n                                        </Text>\n\n                                        <Show.Desktop>\n                                            <QueryImage\n                                                data={data.swap_synthetic_formula}\n                                                alt={localize('swap synthetic formula')}\n                                            />\n                                        </Show.Desktop>\n                                        <Show.Mobile>\n                                            <QueryImage\n                                                data={data.swap_synthetic_formula_mobile}\n                                                alt={localize('swap synthetic formula mobile')}\n                                            />\n                                        </Show.Mobile>\n                                        <FormulaText>\n                                            <StyledOl>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"The contract size is one standard lot of Volatility 75 Index = 1\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"If the swap rate is positive, your account will be credited with the swap amount. If it is negative, your account will be debited.\" />\n                                                    </span>\n                                                </li>\n                                            </StyledOl>\n                                        </FormulaText>\n\n                                        <Text mt=\"1.6rem\">\n                                            <Localize\n                                                translate_text=\"So you will require a swap charge of <0>0.83 USD</0> to keep the position open for one night.\"\n                                                components={[<strong key={0} />]}\n                                            />\n                                        </Text>\n                                    </AccordionItem>\n                                </Accordion>\n\n                                <LinkWrapper height=\"auto\">\n                                    {\n                                        <StyledLinkButton\n                                            tertiary\n                                            external\n                                            type=\"mt5\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {localize('Go to Deriv MT5 dashboard')}\n                                        </StyledLinkButton>\n                                    }\n                                    {\n                                        <StyledLinkButton secondary to=\"/trade-types/cfds/\">\n                                            {localize('Learn more about swap')}\n                                        </StyledLinkButton>\n                                    }\n                                </LinkWrapper>\n                            </RightContent>\n                        </ContentContainer>\n                    </>\n                ) : (\n                    <>\n                        <ContentContainer mb=\"2.0rem\">\n                            <SwapFormWrapper>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={{\n                                        swapCharge: 0,\n                                        swapChargeSymbol: 'USD',\n                                        symbol: '',\n                                        volume: '',\n                                        optionList: financialItemLists,\n                                        contractSize: '',\n                                        swapRate: '',\n                                        pointValue: '',\n                                    }}\n                                    validate={resetValidationForex}\n                                    onSubmit={(values, { setFieldValue }) => {\n                                        setFieldValue('swapCharge', getSwapChargeForex(values))\n                                        setFieldValue('volume', numberSubmitFormat(values.volume))\n                                        setFieldValue(\n                                            'swapRate',\n                                            numberSubmitFormatNegative(values.swapRate),\n                                        )\n                                        setFieldValue(\n                                            'pointValue',\n                                            numberSubmitFormat(values.pointValue),\n                                        )\n                                    }}\n                                >\n                                    {({\n                                        values,\n                                        setFieldValue,\n                                        handleBlur,\n                                        errors,\n                                        touched,\n                                        isValid,\n                                        dirty,\n                                        setFieldTouched,\n                                        setFieldError,\n                                    }) => (\n                                        <CalculatorForm>\n                                            <CalculatorHeader>\n                                                <CalculatorLabel htmlFor=\"message\">\n                                                    {localize('Swap charge')}\n                                                </CalculatorLabel>\n                                                <CalculatorOutputContainer>\n                                                    <CalculatorOutputField>\n                                                        {values.swapCharge}\n                                                    </CalculatorOutputField>\n                                                    <CalculatorOutputSymbol>\n                                                        {values.swapChargeSymbol}\n                                                    </CalculatorOutputSymbol>\n                                                </CalculatorOutputContainer>\n                                            </CalculatorHeader>\n\n                                            <CalculatorBody>\n                                                <Dropdown\n                                                    mb=\"3.6rem\"\n                                                    default_option={optionItemDefault}\n                                                    option_list={values.optionList}\n                                                    label={localize('Symbol')}\n                                                    selected_option={values.symbol}\n                                                    id=\"symbol\"\n                                                    onChange={swap_currency_change_handler(\n                                                        setFieldValue,\n                                                    )}\n                                                    contractSize={values.contractSize}\n                                                    error={touched.symbol && errors.symbol}\n                                                    onBlur={handleBlur}\n                                                />\n                                                <InputGroup>\n                                                    <VolumeField\n                                                        values={values}\n                                                        setFieldValue={setFieldValue}\n                                                        touched={touched}\n                                                        errors={errors}\n                                                        handleBlur={handleBlur}\n                                                        setFieldError={setFieldError}\n                                                        setFieldTouched={setFieldTouched}\n                                                    />\n                                                </InputGroup>\n\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"pointValue\"\n                                                        value={values.pointValue}\n                                                        onChange={(value) => {\n                                                            setFieldValue('pointValue', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"pointValue\"\n                                                                type=\"text\"\n                                                                value={values.pointValue}\n                                                                label={localize('Point value')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.pointValue &&\n                                                                    errors.pointValue\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={() => {\n                                                                    setFieldValue(\n                                                                        'pointValue',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('pointValue', '')\n                                                                    setFieldTouched(\n                                                                        'pointValue',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.pointValue,\n                                                                    15,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <StyledInputGroup>\n                                                    <SwapRateField\n                                                        values={values}\n                                                        setFieldValue={setFieldValue}\n                                                        touched={touched}\n                                                        errors={errors}\n                                                        handleBlur={handleBlur}\n                                                        setFieldError={setFieldError}\n                                                        setFieldTouched={setFieldTouched}\n                                                    />\n                                                </StyledInputGroup>\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </CalculatorForm>\n                                    )}\n                                </Formik>\n                            </SwapFormWrapper>\n\n                            <RightContent>\n                                <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                    {localize('How to calculate swap charges')}\n                                </Header>\n\n                                <Text>\n                                    <Localize translate_text=\"For financial, the swap charge is calculated based on this formula:\" />\n                                </Text>\n                                <Text mb=\"2rem\">\n                                    <Localize\n                                        translate_text=\"<0>Swap charge = volume × contract size × point value × swap rate</0>\"\n                                        components={[<strong key={0} />]}\n                                    />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"This gives you the swap charge in the quote currency for forex pairs, or in the denomination of the underlying asset for commodities.\" />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"For instance, if you are trading the USD/JPY forex pair, the swap charge will be computed in Japanese Yen (JPY) which is the quote currency. On the other hand, if you are trading oil,  then the swap charge will be computed in US Dollar (USD), which is the denomination of the underlying asset – oil.\" />\n                                </Text>\n\n                                <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                    {localize('Example calculation')}\n                                </Header>\n\n                                <Accordion has_single_state>\n                                    <AccordionItem\n                                        header={localize('Swap charge')}\n                                        header_style={header_style}\n                                        style={item_style}\n                                        plus\n                                    >\n                                        <Text mb=\"2rem\">\n                                            {localize(\n                                                'Let’s say you want to keep two lots of EUR/USD with a point value of 0.00001 and swap rate of -0.12 open for one night.',\n                                            )}\n                                        </Text>\n\n                                        <Show.Desktop>\n                                            <QueryImage\n                                                data={data.swap_forex_formula}\n                                                alt={localize('Swap forex formula')}\n                                            />\n                                        </Show.Desktop>\n                                        <Show.Mobile>\n                                            <QueryImage\n                                                data={data.swap_forex_formula_mobile}\n                                                alt={localize('Swap forex formula mobile')}\n                                            />\n                                        </Show.Mobile>\n                                        <FormulaText>\n                                            <StyledOl>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"One standard lot for Forex = 100,000 units\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"The point value is derivied from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"If the swap rate is positive, your account will be credited with the swap amount. If it is negative, your account will be debited.\" />\n                                                    </span>\n                                                </li>\n                                            </StyledOl>\n                                        </FormulaText>\n\n                                        <Text mt=\"1.6rem\">\n                                            <Localize\n                                                translate_text=\"So you will require a swap charge of <0>0.24 USD</0> to keep the position open for one night.\"\n                                                components={[<strong key={0} />]}\n                                            />\n                                        </Text>\n                                    </AccordionItem>\n                                </Accordion>\n                                <LinkWrapper height=\"auto\">\n                                    <StyledLinkButton\n                                        tertiary\n                                        external\n                                        type=\"mt5\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                    <StyledLinkButton secondary to=\"/trade-types/cfds/\">\n                                        {localize('Learn more about swap')}\n                                    </StyledLinkButton>\n                                </LinkWrapper>\n                            </RightContent>\n                        </ContentContainer>\n                    </>\n                )}\n            </StyledSection>\n        </>\n    )\n}\n\nexport default SwapCalculator\n","import React from 'react'\nimport { Hero } from '../common/_style'\nimport SwapCalculatorSection from './_swap-calculator'\nimport { Container, SEO } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst SwapCalculator = () => {\n    return (\n        <Layout>\n            <SEO title={localize('Swap Calculator')} description={localize('Swap Calculator')} />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <Header as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Swap Calculator')}\n                    </Header>\n                </Container>\n            </Hero>\n            <SwapCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(SwapCalculator)\n"],"names":["optionItemDefault","name","display_name","key","icon","market","leverageItemLists","syntheticItemLists","React","src","BOOM1000","alt","symbol","BOOM500","BOOM300EU","CRASH1000","CRASH500","CRASH300EU","STEPINDICES","MARKETBEARNEW","MARKETBULLNEW","INDEX10S1","INDEX10","INDEX25S1","INDEX25","INDEX50S1","INDEX50","INDEX75S1","INDEX75","INDEX100S1","INDEX100","VINDEXIC200","VINDEXIC300","JUMP10NEW","JUMP25NEW","JUMP50NEW","JUMP75NEW","JUMP100NEW","financialItemLists","AUS200","STOCKSHONGKONG50","JP225","EUR50","FRA40","STOCKSGERMANY30","STOCKSSWISS20","UK100","STOCKSUS500","STOCKSUSTECH100","STOCKSWALLSTREET30","BTCUSD","ETHUSD","AUDJPY","AUDCAD","AUDCHF","AUDNZD","AUDUSD","EURAUD","EURCAD","EURCHF","EURGBP","EURJPY","EURNZD","EURUSD","GBPCHF","GBPJPY","GBPUSD","NZDUSD","USDCAD","USDCHF","USDJPY","USDMXN","USDNOK","USDPLN","USDSEK","GBPAUD","GBPCAD","GBPNZD","NZDJPY","GOLDUSD","SILVERUSD","PALLADIUMUSD","PLATINUMUSD","AUDBASKET","GBPBASKET","EURBASKET","USDBASKET","GOLDBASKET","VolumeField","values","setFieldValue","touched","errors","handleBlur","setFieldError","setFieldTouched","Field","value","volume","onChange","field","Input","id","type","label","localize","autoComplete","error","onBlur","handleError","maxLength","getMaxLength","background","SwapRateField","swapRate","swap_currency_change_handler","getCurrency","getContractSize","StyledInputGroup","styled","InputGroup","withConfig","data","useStaticQuery","useState","tab","setTab","activeSymbols","setActiveSymbols","disableDropdown","setDisableDropdown","symbolSpotPrice","setSymbolSpotPrice","onTabClick","t","deriv_api","useDerivApi","useEffect","send","active_symbols","response","length","tempSpotPrice","forEach","item","spot","fetchTickData","useCallback","selectedSymbol","setAssetPrice","BreadCrumbContainer","Flex","jc","ai","LocalizedLinkText","to","color","RightArrow","height","width","style","margin","Text","StyledSection","direction","SectionSubtitle","as","align","weight","mt","mb","tablet","SwapTabSelector","active","onClick","size","ContentContainer","SwapFormWrapper","Formik","enableReinitialize","initialValues","swapCharge","swapChargeSymbol","optionList","contractSize","assetPrice","validate","resetValidationSynthetic","onSubmit","getSwapChargeSynthetic","numberSubmitFormat","numberSubmitFormatNegative","isValid","dirty","CalculatorForm","CalculatorHeader","CalculatorLabel","htmlFor","CalculatorOutputContainer","CalculatorOutputField","CalculatorOutputSymbol","CalculatorBody","Dropdown","option_list","default_option","selected_option","disabled","CalculateButton","secondary","RightContent","Header","Localize","translate_text","components","Accordion","has_single_state","AccordionItem","header","header_style","item_style","plus","Show","QueryImage","swap_synthetic_formula","swap_synthetic_formula_mobile","FormulaText","StyledOl","LinkWrapper","StyledLinkButton","tertiary","external","target","rel","pointValue","resetValidationForex","getSwapChargeForex","swap_forex_formula","swap_forex_formula_mobile","WithIntl","Layout","SEO","title","description","Hero","Container","SwapCalculatorSection"],"sourceRoot":""}