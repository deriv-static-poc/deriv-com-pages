{"version":3,"file":"9402-5dc76ac49eae582200a4.js","mappings":"qMA2BMA,EAAYC,EAAAA,QAAAA,QAAAA,WAAH,kEAAGA,CAAH,+KAQFC,EAAAA,EAAAA,SAKPC,EAAMF,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,mCAIHG,EAAcH,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,kIAQJC,EAAAA,EAAAA,QAIAA,EAAAA,EAAAA,SAIPG,EAAeJ,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,mCASZK,GAAaC,EAAAA,EAAAA,KAAH,+GAIHL,EAAAA,EAAAA,SAGS,SAACM,GAAD,OAAYA,EAAMC,UAAY,IAAM,MAP1C,IAUVC,GAAOT,EAAAA,EAAAA,SAAOU,EAAAA,IAAVC,WAAA,6DAAGX,CAAH,aACJK,GACA,SAACE,GAAD,OACEA,EAAMK,eAAiBL,EAAMM,WACvB,uEACA,sDALJ,IAOJC,GAAed,EAAAA,EAAAA,SAAOe,EAAAA,IAAVJ,WAAA,qEAAGX,CAAH,yKAOLC,EAAAA,EAAAA,SAMPe,EAAkBhB,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,kDAGRC,EAAAA,EAAAA,SAsGb,UAlGoB,WAChB,IAAMgB,GAAOC,EAAAA,EAAAA,gBAnGN,cAoGP,EAAgCC,EAAAA,SAAe,UAAxCP,EAAP,KAAqBQ,EAArB,KACMC,EAAe,SAACC,GACdA,IAAkBV,GACtBQ,EAAQE,EAFZ,EAIA,OACIH,EAAAA,cAACpB,EAAD,KACIoB,EAAAA,cAAChB,EAAD,KACIgB,EAAAA,cAACjB,EAAD,KACIiB,EAAAA,cAACV,EAAD,CACIc,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNlB,WAAS,EACTK,WAAW,SACXD,aAAcA,EACde,QAAS,kBAAMN,EAAa,SARhC,IAUKO,EAAAA,EAAAA,IAAS,0BAGlBT,EAAAA,cAACjB,EAAD,KACIiB,EAAAA,cAACV,EAAD,CACIc,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNb,WAAW,SACXD,aAAcA,EACde,QAAS,kBAAMN,EAAa,SAPhC,IASKO,EAAAA,EAAAA,IAAS,gCAGlBT,EAAAA,cAACjB,EAAD,KACIiB,EAAAA,cAACV,EAAD,CACIc,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNb,WAAW,SACXD,aAAcA,EACde,QAAS,kBAAMN,EAAa,SAPhC,IASKO,EAAAA,EAAAA,IAAS,+BAGlBT,EAAAA,cAACjB,EAAD,KACIiB,EAAAA,cAACV,EAAD,CACIc,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNb,WAAW,SACXD,aAAcA,EACde,QAAS,kBAAMN,EAAa,SAPhC,IASKO,EAAAA,EAAAA,IAAS,gBAGlBT,EAAAA,cAACjB,EAAD,KACIiB,EAAAA,cAACV,EAAD,CACIc,GAAG,KACHC,KAAK,oBACLC,GAAG,MACHC,MAAM,OACNb,WAAW,SACXD,aAAcA,EACde,QAAS,kBAAMN,EAAa,SAPhC,IASKO,EAAAA,EAAAA,IAAS,qBAGlBT,EAAAA,cAACH,EAAD,KACIG,EAAAA,cAACL,EAAD,CACIe,WAAS,EACTC,UAAQ,EACRN,KAAK,OACLO,OAAO,SACPC,IAAI,iCAEHJ,EAAAA,EAAAA,IAAS,sBAItBT,EAAAA,cAACf,EAAD,KACIe,EAAAA,cAACc,EAAAA,GAAD,CACIhB,KAAMA,EAAKL,GACXsB,KAAKN,EAAAA,EAAAA,IAAS,2BAA4B,CAAEO,KAAMvB,IAClDwB,MAAM,UA5F1B,C","sources":["webpack://deriv-com/./src/pages/dbot/_dbot-video.tsx"],"sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled, { css } from 'styled-components'\nimport { localize } from 'components/localization'\nimport { Header, QueryImage } from 'components/elements'\nimport device from 'themes/device'\nimport { LinkButton } from 'components/form'\n\nconst query = graphql`\n    query {\n        step_1: file(relativePath: { eq: \"dbot-video/dbot-step1.png\" }) {\n            ...fadeIn\n        }\n        step_2: file(relativePath: { eq: \"dbot-video/dbot-step2.png\" }) {\n            ...fadeIn\n        }\n        step_3: file(relativePath: { eq: \"dbot-video/dbot-step3.png\" }) {\n            ...fadeIn\n        }\n        step_4: file(relativePath: { eq: \"dbot-video/dbot-step4.png\" }) {\n            ...fadeIn\n        }\n        step_5: file(relativePath: { eq: \"dbot-video/dbot-step5.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst Container = styled.section`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-top: 4rem;\n    align-items: center;\n\n    @media ${device.tabletL} {\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\nconst Tab = styled.div`\n    width: 100%;\n    margin-top: 2.4rem;\n`\nconst TabsWrapper = styled.div`\n    width: 40.7rem;\n    margin-right: 2.6rem;\n\n    div:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        width: 80%;\n        margin: 2rem 0 0;\n    }\n    @media ${device.mobileL} {\n        width: 100%;\n    }\n`\nconst VideoWrapper = styled.div`\n    max-width: 79.2rem;\n    width: 100%;\n`\n\ntype StepCommonType = {\n    no_margin: string\n}\n\nconst StepCommon = css<StepCommonType>`\n    font-weight: 500;\n    cursor: pointer;\n    padding-left: 1.8rem;\n    @media ${device.tabletL} {\n        text-align: left;\n        border: none;\n        margin-top: ${(props) => (props.no_margin ? '0' : '2rem')};\n    }\n`\nconst Step = styled(Header)`\n    ${StepCommon}\n    ${(props) =>\n        props.current_step === props.image_name\n            ? 'color: var(--color-black-3); border-left: 4px solid var(--color-red)'\n            : 'opacity: 0.2; border-left: 4px solid rgb(0, 0, 0, 0)'};\n`\nconst GoToLiveDemo = styled(LinkButton)`\n    border: 2px solid var(--color-red);\n    font-weight: bold;\n    line-height: 1.43;\n    width: fit-content;\n    margin-top: 4rem;\n\n    @media ${device.tabletL} {\n        max-width: 100%;\n        margin: 4rem auto;\n        font-size: 1.75rem;\n    }\n`\nconst GotoLiveWrapper = styled.div`\n    margin-top: 4rem;\n\n    @media ${device.tabletL} {\n        margin: 4rem auto;\n    }\n`\nconst DtraderTabs = () => {\n    const data = useStaticQuery(query)\n    const [current_step, setStep] = React.useState('step_1')\n    const clickHandler = (incoming_step: string) => {\n        if (incoming_step === current_step) return\n        setStep(incoming_step)\n    }\n    return (\n        <Container>\n            <TabsWrapper>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        no_margin\n                        image_name=\"step_1\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_1')}\n                    >\n                        {localize('1. Select your asset')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_2\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_2')}\n                    >\n                        {localize('2. Set purchase conditions')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_3\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_3')}\n                    >\n                        {localize('3. Set restart conditions')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_4\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_4')}\n                    >\n                        {localize('4. Run bot')}\n                    </Step>\n                </Tab>\n                <Tab>\n                    <Step\n                        as=\"h4\"\n                        type=\"sub-section-title\"\n                        lh=\"1.5\"\n                        align=\"left\"\n                        image_name=\"step_5\"\n                        current_step={current_step}\n                        onClick={() => clickHandler('step_5')}\n                    >\n                        {localize('5. Check profit')}\n                    </Step>\n                </Tab>\n                <GotoLiveWrapper>\n                    <GoToLiveDemo\n                        secondary\n                        external\n                        type=\"dbot\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer nofollow\"\n                    >\n                        {localize('Go to live demo')}\n                    </GoToLiveDemo>\n                </GotoLiveWrapper>\n            </TabsWrapper>\n            <VideoWrapper>\n                <QueryImage\n                    data={data[current_step]}\n                    alt={localize('{{step}} in DBot trading', { step: current_step })}\n                    width=\"100%\"\n                />\n            </VideoWrapper>\n        </Container>\n    )\n}\nexport default DtraderTabs\n"],"names":["Container","styled","device","Tab","TabsWrapper","VideoWrapper","StepCommon","css","props","no_margin","Step","Header","withConfig","current_step","image_name","GoToLiveDemo","LinkButton","GotoLiveWrapper","data","useStaticQuery","React","setStep","clickHandler","incoming_step","as","type","lh","align","onClick","localize","secondary","external","target","rel","QueryImage","alt","step","width"],"sourceRoot":""}