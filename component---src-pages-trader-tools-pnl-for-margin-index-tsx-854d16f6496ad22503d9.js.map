{"version":3,"file":"component---src-pages-trader-tools-pnl-for-margin-index-tsx-854d16f6496ad22503d9.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/trader-tools/common/_underlying-data.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/_pnl-margin-calculator.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/index.tsx"],"sourcesContent":["import React from 'react'\nimport {\n    AUDCAD,\n    AUDCHF,\n    AUDBASKET,\n    AUDJPY,\n    AUDNZD,\n    AUDUSD,\n    AUS200,\n    BOOM1000,\n    BOOM500,\n    BOOM300EU,\n    BTCUSD,\n    CRASH1000,\n    CRASH500,\n    CRASH300EU,\n    ETHUSD,\n    EUR50,\n    EURAUD,\n    EURCAD,\n    EURCHF,\n    EURGBP,\n    EURBASKET,\n    EURJPY,\n    EURNZD,\n    EURUSD,\n    FRA40,\n    GBPAUD,\n    GBPCAD,\n    GBPCHF,\n    GBPBASKET,\n    GBPJPY,\n    GBPNZD,\n    GBPUSD,\n    GOLDUSD,\n    GOLDBASKET,\n    INDEX10,\n    INDEX100,\n    INDEX100S1,\n    INDEX10S1,\n    INDEX25,\n    INDEX25S1,\n    INDEX50,\n    INDEX50S1,\n    INDEX75,\n    INDEX75S1,\n    JP225,\n    JUMP10NEW,\n    JUMP25NEW,\n    JUMP50NEW,\n    JUMP75NEW,\n    JUMP100NEW,\n    MARKETBEARNEW,\n    MARKETBULLNEW,\n    NZDJPY,\n    NZDUSD,\n    PALLADIUMUSD,\n    PLATINUMUSD,\n    SILVERUSD,\n    STEPINDICES,\n    STOCKSHONGKONG50,\n    STOCKSGERMANY30,\n    STOCKSSWISS20,\n    STOCKSUS500,\n    STOCKSUSTECH100,\n    STOCKSWALLSTREET30,\n    UK100,\n    USDCAD,\n    USDCHF,\n    USDMXN,\n    USDNOK,\n    USDPLN,\n    USDSEK,\n    USDBASKET,\n    USDJPY,\n    VINDEXIC200,\n    VINDEXIC300,\n} from 'components/elements/symbols'\n\nexport const optionItemDefault = {\n    name: 'default',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const optionLeverageDefault = {\n    name: 'value',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const leverageItemLists = [\n    { name: 4000, display_name: 4000, key: '1', icon: '' },\n    { name: 3500, display_name: 3500, key: '2', icon: '' },\n    { name: 3000, display_name: 3000, key: '3', icon: '' },\n    { name: 2500, display_name: 2500, key: '4', icon: '' },\n    { name: 2000, display_name: 2000, key: '5', icon: '' },\n    { name: 1500, display_name: 1500, key: '6', icon: '' },\n    { name: 1000, display_name: 1000, key: '7', icon: '' },\n    { name: 900, display_name: 900, key: '8', icon: '' },\n    { name: 800, display_name: 800, key: '9', icon: '' },\n    { name: 700, display_name: 700, key: '10', icon: '' },\n    { name: 600, display_name: 600, key: '11', icon: '' },\n    { name: 500, display_name: 500, key: '12', icon: '' },\n    { name: 400, display_name: 400, key: '13', icon: '' },\n    { name: 200, display_name: 200, key: '14', icon: '' },\n    { name: 100, display_name: 100, key: '15', icon: '' },\n    { name: 50, display_name: 50, key: '16', icon: '' },\n    { name: 30, display_name: 30, key: '17', icon: '' },\n    { name: 5, display_name: 5, key: '18', icon: '' },\n]\n\nexport const syntheticItemLists = [\n    {\n        name: 'Boom 1000 Index',\n        display_name: 'Boom 1000 Index',\n        icon: <img src={BOOM1000} alt=\"boom 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM1000',\n    },\n    {\n        name: 'Boom 500 Index',\n        display_name: 'Boom 500 Index',\n        icon: <img src={BOOM500} alt=\"boom 500\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM500',\n    },\n    {\n        name: 'Boom 300 Index',\n        display_name: 'Boom 300 Index',\n        icon: <img src={BOOM300EU} alt=\"boom 300\" />,\n        market: 'synthetic_indices',\n        symbol: 'BOOM300N',\n    },\n    {\n        name: 'Crash 1000 Index',\n        display_name: 'Crash 1000 Index',\n        icon: <img src={CRASH1000} alt=\"crash 1000\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH1000',\n    },\n    {\n        name: 'Crash 500 Index',\n        display_name: 'Crash 500 Index',\n        icon: <img src={CRASH500} alt=\"crash 500\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH500',\n    },\n    {\n        name: 'Crash 300 Index',\n        display_name: 'Crash 300 Index',\n        icon: <img src={CRASH300EU} alt=\"crash 300\" />,\n        market: 'synthetic_indices',\n        symbol: 'CRASH300N',\n    },\n    {\n        name: 'Step Index',\n        display_name: 'Step Index',\n        icon: <img src={STEPINDICES} alt=\"step index\" />,\n        market: 'synthetic_indices',\n        symbol: 'stpRNG',\n    },\n    {\n        name: 'Bear Market Index',\n        display_name: 'Bear Market Index',\n        icon: <img src={MARKETBEARNEW} alt=\"bear market index\" />,\n        market: 'synthetic_indices',\n        symbol: 'RDBEAR',\n    },\n    {\n        name: 'Bull Market Index',\n        display_name: 'Bull Market Index',\n        icon: <img src={MARKETBULLNEW} alt=\"bull market index\" />,\n        market: 'synthetic_indices',\n        symbol: 'RDBULL',\n    },\n    {\n        name: 'Volatility 10 (1s) Index',\n        display_name: 'Volatility 10 (1s) Index',\n        icon: <img src={INDEX10S1} alt=\"vol 10 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ10V',\n    },\n    {\n        name: 'Volatility 10 Index',\n        display_name: 'Volatility 10 Index',\n        icon: <img src={INDEX10} alt=\"vol 10\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_10',\n    },\n    {\n        name: 'Volatility 25 (1s) Index',\n        display_name: 'Volatility 25 (1s) Index',\n        icon: <img src={INDEX25S1} alt=\"vol 25 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ25V',\n    },\n    {\n        name: 'Volatility 25 Index',\n        display_name: 'Volatility 25 Index',\n        icon: <img src={INDEX25} alt=\"\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_25',\n    },\n    {\n        name: 'Volatility 50 (1s) Index',\n        display_name: 'Volatility 50 (1s) Index',\n        icon: <img src={INDEX50S1} alt=\"vol 50 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ50V',\n    },\n    {\n        name: 'Volatility 50 Index',\n        display_name: 'Volatility 50 Index',\n        icon: <img src={INDEX50} alt=\"vol 50\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_50',\n    },\n    {\n        name: 'Volatility 75 (1s) Index',\n        display_name: 'Volatility 75 (1s) Index',\n        icon: <img src={INDEX75S1} alt=\"vol 75 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ75V',\n    },\n    {\n        name: 'Volatility 75 Index',\n        display_name: 'Volatility 75 Index',\n        icon: <img src={INDEX75} alt=\"vol 75\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_75',\n    },\n    {\n        name: 'Volatility 100 (1s) Index',\n        display_name: 'Volatility 100 (1s) Index',\n        icon: <img src={INDEX100S1} alt=\"vol 100 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ100V',\n    },\n    {\n        name: 'Volatility 100 Index',\n        display_name: 'Volatility 100 Index',\n        icon: <img src={INDEX100} alt=\"vol 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'R_100',\n    },\n    {\n        name: 'Volatility 200 (1s) Index',\n        display_name: 'Volatility 200 (1s) Index',\n        icon: <img src={VINDEXIC200} alt=\"vol 200 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ200V',\n    },\n    {\n        name: 'Volatility 300 (1s) Index',\n        display_name: 'Volatility 300 (1s) Index',\n        icon: <img src={VINDEXIC300} alt=\"vol 300 1s\" />,\n        market: 'synthetic_indices',\n        symbol: '1HZ300V',\n    },\n    {\n        name: 'Jump 10 Index',\n        display_name: 'Jump 10 Index',\n        icon: <img src={JUMP10NEW} alt=\"jump 10\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD10',\n    },\n    {\n        name: 'Jump 25 Index',\n        display_name: 'Jump 25 Index',\n        icon: <img src={JUMP25NEW} alt=\"jump 25\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD25',\n    },\n    {\n        name: 'Jump 50 Index',\n        display_name: 'Jump 50 Index',\n        icon: <img src={JUMP50NEW} alt=\"jump 50\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD50',\n    },\n    {\n        name: 'Jump 75 Index',\n        display_name: 'Jump 75 Index',\n        icon: <img src={JUMP75NEW} alt=\"jump 75\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD75',\n    },\n    {\n        name: 'Jump 100 Index',\n        display_name: 'Jump 100 Index',\n        icon: <img src={JUMP100NEW} alt=\"jump 100\" />,\n        market: 'synthetic_indices',\n        symbol: 'JD100',\n    },\n]\n\nexport const financialItemLists = [\n    {\n        name: 'AUS200',\n        display_name: 'Australian Index',\n        icon: <img src={AUS200} alt=\"australia 200\" />,\n        market: 'other',\n        symbol: 'OTC_AS51',\n    },\n    {\n        name: 'HK50',\n        display_name: 'Hong Kong Index',\n        icon: <img src={STOCKSHONGKONG50} alt=\"hong kong 50\" />,\n        market: 'other',\n        symbol: 'OTC_HSI',\n    },\n    {\n        name: 'JP225',\n        display_name: 'Japanese Index',\n        icon: <img src={JP225} alt=\"japan 225\" />,\n        market: 'other',\n        symbol: 'OTC_N225',\n    },\n    {\n        name: 'EUR50',\n        display_name: 'Euro 50 Index',\n        icon: <img src={EUR50} alt=\"europe 50\" />,\n        market: 'other',\n        symbol: 'OTC_SX5E',\n    },\n    {\n        name: 'FRA40',\n        display_name: 'French Index',\n        icon: <img src={FRA40} alt=\"france 40\" />,\n        market: 'other',\n        symbol: 'OTC_FCHI',\n    },\n    {\n        name: 'GER30',\n        display_name: 'German Index',\n        icon: <img src={STOCKSGERMANY30} alt=\"german 30\" />,\n        market: 'other',\n        symbol: 'OTC_GDAXI',\n    },\n    {\n        name: 'SWISS20',\n        display_name: 'Swiss Index',\n        icon: <img src={STOCKSSWISS20} alt=\"swiss 20\" />,\n        market: 'other',\n        symbol: 'OTC_SSMI',\n    },\n    {\n        name: 'UK100',\n        display_name: 'UK Index',\n        icon: <img src={UK100} alt=\"uk 100\" />,\n        market: 'other',\n        symbol: 'OTC_FTSE',\n    },\n    {\n        name: 'USINDEX',\n        display_name: 'US Index',\n        icon: <img src={STOCKSUS500} alt=\"us 500\" />,\n        market: 'other',\n        symbol: 'OTC_SPC',\n    },\n    {\n        name: 'USTECHINDEX',\n        display_name: 'US Tech Index',\n        icon: <img src={STOCKSUSTECH100} alt=\"us tech 100\" />,\n        market: 'other',\n        symbol: 'OTC_NDX',\n    },\n    {\n        name: 'STOCKSWALLSTREET30',\n        display_name: 'Wall Street 30 Index',\n        icon: <img src={STOCKSWALLSTREET30} alt=\"wall street 30\" />,\n        market: 'other',\n        symbol: 'OTC_DJI',\n    },\n    {\n        name: 'BTCUSD',\n        display_name: 'BTC/USD',\n        icon: <img src={BTCUSD} alt=\"btc usd\" />,\n        market: 'crypto',\n        symbol: 'cryBTCUSD',\n    },\n    {\n        name: 'ETHUSD',\n        display_name: 'ETH/USD',\n        icon: <img src={ETHUSD} alt=\"eth usd\" />,\n        market: 'crypto',\n        symbol: 'cryETHUSD',\n    },\n    {\n        name: 'AUDJPY',\n        display_name: 'AUD/JPY',\n        icon: <img src={AUDJPY} alt=\"aud jpy\" />,\n        market: 'forex',\n        symbol: 'frxAUDJPY',\n    },\n    {\n        name: 'AUDCAD',\n        display_name: 'AUD/CAD',\n        icon: <img src={AUDCAD} alt=\"aud cad\" />,\n        market: 'forex',\n        symbol: 'frxAUDCAD',\n    },\n    {\n        name: 'AUDCHF',\n        display_name: 'AUD/CHF',\n        icon: <img src={AUDCHF} alt=\"aud chf\" />,\n        market: 'forex',\n        symbol: 'frxAUDCHF',\n    },\n    {\n        name: 'AUDNZD',\n        display_name: 'AUD/NZD',\n        icon: <img src={AUDNZD} alt=\"aud nzd\" />,\n        market: 'forex',\n        symbol: 'frxAUDNZD',\n    },\n    {\n        name: 'AUDUSD',\n        display_name: 'AUD/USD',\n        icon: <img src={AUDUSD} alt=\"aud usd\" />,\n        market: 'forex',\n        symbol: 'frxAUDUSD',\n    },\n    {\n        name: 'EURAUD',\n        display_name: 'EUR/AUD',\n        icon: <img src={EURAUD} alt=\"eur aud\" />,\n        market: 'forex',\n        symbol: 'frxEURAUD',\n    },\n    {\n        name: 'EURCAD',\n        display_name: 'EUR/CAD',\n        icon: <img src={EURCAD} alt=\"eur cad\" />,\n        market: 'forex',\n        symbol: 'frxEURCAD',\n    },\n    {\n        name: 'EURCHF',\n        display_name: 'EUR/CHF',\n        icon: <img src={EURCHF} alt=\"eur chf\" />,\n        market: 'forex',\n        symbol: 'frxEURCHF',\n    },\n    {\n        name: 'EURGBP',\n        display_name: 'EUR/GBP',\n        icon: <img src={EURGBP} alt=\"eur gbp\" />,\n        market: 'forex',\n        symbol: 'frxEURGBP',\n    },\n    {\n        name: 'EURJPY',\n        display_name: 'EUR/JPY',\n        icon: <img src={EURJPY} alt=\"eur jpy\" />,\n        market: 'forex',\n        symbol: 'frxEURJPY',\n    },\n    {\n        name: 'EURNZD',\n        display_name: 'EUR/NZD',\n        icon: <img src={EURNZD} alt=\"eur nzd\" />,\n        market: 'forex',\n        symbol: 'frxEURNZD',\n    },\n    {\n        name: 'EURUSD',\n        display_name: 'EUR/USD',\n        icon: <img src={EURUSD} alt=\"eur usd\" />,\n        market: 'forex',\n        symbol: 'frxEURUSD',\n    },\n    {\n        name: 'GBPCHF',\n        display_name: 'GBP/CHF',\n        icon: <img src={GBPCHF} alt=\"gbp chf\" />,\n        market: 'forex',\n        symbol: 'frxGBPCHF',\n    },\n    {\n        name: 'GBPJPY',\n        display_name: 'GBP/JPY',\n        icon: <img src={GBPJPY} alt=\"gbp jpy\" />,\n        market: 'forex',\n        symbol: 'frxGBPJPY',\n    },\n    {\n        name: 'GBPUSD',\n        display_name: 'GBP/USD',\n        icon: <img src={GBPUSD} alt=\"gbp usd\" />,\n        market: 'forex',\n        symbol: 'frxGBPUSD',\n    },\n    {\n        name: 'NZDUSD',\n        display_name: 'NZD/USD',\n        icon: <img src={NZDUSD} alt=\"nzd usd\" />,\n        market: 'forex',\n        symbol: 'frxNZDUSD',\n    },\n    {\n        name: 'USDCAD',\n        display_name: 'USD/CAD',\n        icon: <img src={USDCAD} alt=\"usd cad\" />,\n        market: 'forex',\n        symbol: 'frxUSDCAD',\n    },\n    {\n        name: 'USDCHF',\n        display_name: 'USD/CHF',\n        icon: <img src={USDCHF} alt=\"usd chf\" />,\n        market: 'forex',\n        symbol: 'frxUSDCHF',\n    },\n    {\n        name: 'USDJPY',\n        display_name: 'USD/JPY',\n        icon: <img src={USDJPY} alt=\"usd jpy\" />,\n        market: 'forex',\n        symbol: 'frxUSDJPY',\n    },\n    {\n        name: 'USDMXN',\n        display_name: 'USD/MXN',\n        icon: <img src={USDMXN} alt=\"usd mxn\" />,\n        market: 'forex',\n        symbol: 'frxUSDMXN',\n    },\n    {\n        name: 'USDNOK',\n        display_name: 'USD/NOK',\n        icon: <img src={USDNOK} alt=\"usd nok\" />,\n        market: 'forex',\n        symbol: 'frxUSDNOK',\n    },\n    {\n        name: 'USDPLN',\n        display_name: 'USD/PLN',\n        icon: <img src={USDPLN} alt=\"usd pln\" />,\n        market: 'forex',\n        symbol: 'frxUSDPLN',\n    },\n    {\n        name: 'USDSEK',\n        display_name: 'USD/SEK',\n        icon: <img src={USDSEK} alt=\"usd sek\" />,\n        market: 'forex',\n        symbol: 'frxUSDSEK',\n    },\n    {\n        name: 'GBPAUD',\n        display_name: 'GBP/AUD',\n        icon: <img src={GBPAUD} alt=\"gbp aud\" />,\n        market: 'forex',\n        symbol: 'frxGBPAUD',\n    },\n    {\n        name: 'GBPCAD',\n        display_name: 'GBP/CAD',\n        icon: <img src={GBPCAD} alt=\"gbp cad\" />,\n        market: 'forex',\n        symbol: 'frxGBPCAD',\n    },\n    {\n        name: 'GBPNZD',\n        display_name: 'GBP/NZD',\n        icon: <img src={GBPNZD} alt=\"gbp nzd\" />,\n        market: 'forex',\n        symbol: 'frxGBPNZD',\n    },\n    {\n        name: 'NZDJPY',\n        display_name: 'NZD/JPY',\n        icon: <img src={NZDJPY} alt=\"nzd jpy\" />,\n        market: 'forex',\n        symbol: 'frxNZDJPY',\n    },\n    {\n        name: 'XAUUSD',\n        display_name: 'Gold/USD',\n        icon: <img src={GOLDUSD} alt=\"gold usd\" />,\n        market: 'commodities',\n        symbol: 'OTC_HSI',\n    },\n    {\n        name: 'XAGUSD',\n        display_name: 'Silver/USD',\n        icon: <img src={SILVERUSD} alt=\"silver usd\" />,\n        market: 'commodities',\n        symbol: 'frxXAGUSD',\n    },\n    {\n        name: 'XPDUSD',\n        display_name: 'Palladium/USD',\n        icon: <img src={PALLADIUMUSD} alt=\"palladium usd\" />,\n        market: 'commodities',\n        symbol: 'frxXPDUSD',\n    },\n    {\n        name: 'XPTUSD',\n        display_name: 'Platinum/USD',\n        icon: <img src={PLATINUMUSD} alt=\"platinum usd\" />,\n        market: 'commodities',\n        symbol: 'frxXPTUSD',\n    },\n    {\n        name: 'AUDBASKET',\n        display_name: 'AUD Basket',\n        icon: <img src={AUDBASKET} alt=\"aud basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDAUD',\n    },\n    {\n        name: 'GBPBASKET',\n        display_name: 'GBP Basket',\n        icon: <img src={GBPBASKET} alt=\"gbp basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDGBP',\n    },\n    {\n        name: 'EURBASKET',\n        display_name: 'EUR Basket',\n        icon: <img src={EURBASKET} alt=\"eur basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDEUR',\n    },\n    {\n        name: 'USDBASKET',\n        display_name: 'USD Basket',\n        icon: <img src={USDBASKET} alt=\"usd basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDUSD',\n    },\n    {\n        name: 'GOLDBASKET',\n        display_name: 'Gold Basket',\n        icon: <img src={GOLDBASKET} alt=\"gold basket\" />,\n        market: 'basket_indices',\n        symbol: 'WLDXAU',\n    },\n]\n","import * as React from 'react'\nimport { useState, useRef } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    getContractSize,\n    getCurrency,\n    getPnlMarginCommon,\n    numberSubmitFormat,\n    resetValidationPnlMargin,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    financialItemLists,\n    optionItemDefault,\n    syntheticItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorDropdown,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    LinkWrapper,\n    PnlCalculatorFormMobile,\n    PnlCalculatorHeaderMobile,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnlHeaderOverflow,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { Desktop, Mobile } from 'components/containers/visibility'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/tools/black-right-arrow.svg'\n\nconst PnlMarginCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n\n    const data = useStaticQuery(query)\n    const formik_ref = useRef(null)\n    const form = formik_ref.current\n\n    const [tab, setTab] = useState('Buy')\n    const [sub_tab, setSubTab] = useState('Synthetic')\n    // These additional states have been created to track the first output (levels)\n    // from the calculator in order to rerender the second output (pips)\n    const [stop_loss_output, setStopLossOutput] = useState('0')\n    const [take_profit_output, setTakeProfitOutput] = useState('0')\n\n    const onTabClick = (t) => {\n        setTab(t)\n        if (form) {\n            form.resetForm({})\n            form.setErrors({})\n            form.setFieldValue('accountType', sub_tab === 'Synthetic' ? 'Synthetic' : 'Financial')\n            form.setFieldValue(\n                'optionList',\n                sub_tab === 'Synthetic' ? syntheticItemLists : financialItemLists,\n            )\n        }\n    }\n    const onSubTabClick = (t) => setSubTab(t)\n\n    // Watch the state of the first output, and update the second output upon change\n    // TODO: Find a cleaner solution for this\n    React.useEffect(() => {\n        if (form?.values.pointValue) {\n            form.setFieldValue(\n                'stopLossPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getStopLossPip'),\n            )\n            form.setFieldValue(\n                'takeProfitPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getTakeProfitPip'),\n            )\n            // The 2 calls below is to reset the output state in order\n            // prevent the pip output from displaying NAN\n            setStopLossOutput('0')\n            setTakeProfitOutput('0')\n        }\n    }, [stop_loss_output, take_profit_output])\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for margin')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for margin helps you to approximate your losses and/or gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Buy'} onClick={() => onTabClick('Buy')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Buy')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Sell'} onClick={() => onTabClick('Sell')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Sell')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                <ContentContainer mb=\"4.0rem\">\n                    <FormWrapper>\n                        <Formik\n                            innerRef={formik_ref}\n                            enableReinitialize\n                            initialValues={{\n                                accountType: 'Synthetic',\n                                pnlMarginSymbol: 'USD',\n                                stopLossPips: 0,\n                                stopLossLevel: 0,\n                                takeProfitPips: 0,\n                                takeProfitLevel: 0,\n                                symbol: '',\n                                pointValue: '',\n                                volume: '',\n                                takeProfitAmount: '',\n                                optionList: syntheticItemLists,\n                                contractSize: '',\n                                assetPrice: '',\n                                stopLossAmount: '',\n                            }}\n                            validate={resetValidationPnlMargin}\n                            onSubmit={(values, { setFieldValue }) => {\n                                setFieldValue(\n                                    'stopLossPips',\n                                    getPnlMarginCommon(values, 'getStopLossPip'),\n                                )\n                                if (tab === 'Buy') {\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                }\n                                if (tab === 'Sell') {\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                }\n\n                                setFieldValue(\n                                    'takeProfitPips',\n                                    getPnlMarginCommon(values, 'getTakeProfitPip'),\n                                )\n\n                                setFieldValue('pointValue', numberSubmitFormat(values.pointValue))\n                                setFieldValue('volume', numberSubmitFormat(values.volume))\n                                setFieldValue('assetPrice', numberSubmitFormat(values.assetPrice))\n                                setFieldValue(\n                                    'stopLossAmount',\n                                    numberSubmitFormat(values.stopLossAmount),\n                                )\n                                setFieldValue(\n                                    'takeProfitAmount',\n                                    numberSubmitFormat(values.takeProfitAmount),\n                                )\n                            }}\n                        >\n                            {({\n                                values,\n                                setFieldValue,\n                                handleBlur,\n                                errors,\n                                touched,\n                                setFieldError,\n                                setFieldTouched,\n                                isValid,\n                                dirty,\n                                setErrors,\n                                resetForm,\n                            }) => {\n                                const pnlSyntheticHandler = () => {\n                                    onSubTabClick('Synthetic')\n                                    setErrors({})\n                                    resetForm()\n                                }\n\n                                const pnlFinancialHandler = () => {\n                                    onSubTabClick('Financial')\n                                    setErrors({})\n                                    resetForm()\n                                    setFieldValue('accountType', 'Financial')\n                                    setFieldValue('optionList', financialItemLists)\n                                }\n\n                                const calculatorDropdownHandler = (value) => {\n                                    setFieldValue('pnlMarginSymbol', getCurrency(value))\n                                    setFieldValue('contractSize', getContractSize(value))\n                                    setFieldValue('symbol', value)\n                                }\n\n                                const takeProfitErrorHanlder = (current_input) => {\n                                    setFieldValue('takeProfitAmount', '', false)\n                                    setFieldError('takeProfitAmount', '')\n                                    setFieldTouched('takeProfitAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const stopLossErrorHandler = (current_input) => {\n                                    setFieldValue('stopLossAmount', '', false)\n                                    setFieldError('stopLossAmount', '')\n                                    setFieldTouched('stopLossAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const AssetPriceInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.assetPrice}\n                                        label={localize('Open price of asset')}\n                                        autoComplete=\"off\"\n                                        error={touched.assetPrice && errors.assetPrice}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('assetPrice', '', false)\n                                            setFieldError('assetPrice', '')\n                                            setFieldTouched('assetPrice', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.assetPrice, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const StopLossAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.stopLossAmount}\n                                        label={localize('Stop loss amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.stopLossAmount && errors.stopLossAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={stopLossErrorHandler}\n                                        maxLength={getMaxLength(values.stopLossAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const PointValueInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"pointValue\"\n                                        type=\"text\"\n                                        label={localize('Point value')}\n                                        autoComplete=\"off\"\n                                        error={touched.pointValue && errors.pointValue}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('pointValue', '', false)\n                                            setFieldError('pointValue', '')\n                                            setFieldTouched('pointValue', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.pointValue, 8)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const takeProfitAmountChangeHandler = (value) => {\n                                    setFieldValue('takeProfitAmount', value)\n                                }\n\n                                const stopLossAmountChangeHandler = (value) => {\n                                    setFieldValue('stopLossAmount', value)\n                                }\n\n                                const TakeProfitAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"takeProfitAmount\"\n                                        type=\"text\"\n                                        label={localize('Take profit amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.takeProfitAmount && errors.takeProfitAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={takeProfitErrorHanlder}\n                                        maxLength={getMaxLength(values.takeProfitAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                return (\n                                    <>\n                                        <Desktop breakpoint={'tablet'}>\n                                            <PnlCalculatorFormMobile>\n                                                <CalculatorHeader>\n                                                    <Flex mb=\"24px\">\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex\n                                                            fd=\"column\"\n                                                            width=\"100%\"\n                                                            ml=\"3px\"\n                                                            mr=\"2rem\"\n                                                        >\n                                                            <CalculatorDropdown\n                                                                option_list={values.optionList}\n                                                                label={localize('Symbol')}\n                                                                default_option={optionItemDefault}\n                                                                selected_option={values.symbol}\n                                                                id=\"symbol\"\n                                                                onChange={calculatorDropdownHandler}\n                                                                contractSize={values.contractSize}\n                                                                error={\n                                                                    touched.symbol && errors.symbol\n                                                                }\n                                                                onBlur={handleBlur}\n                                                            />\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"100%\" ml=\"5px\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"pointValue\"\n                                                                    value={values.pointValue}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'pointValue',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {PointValueInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex\n                                                            fd=\"column\"\n                                                            width=\"100%\"\n                                                            ml=\"3px\"\n                                                            mr=\"2rem\"\n                                                        >\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"volume\"\n                                                                    value={values.volume}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"volume\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Volume',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.volume &&\n                                                                                errors.volume\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'volume',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength={getMaxLength(\n                                                                                values.volume,\n                                                                                8,\n                                                                            )}\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"100%\" ml=\"5px\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"takeProfitAmount\"\n                                                                    value={values.takeProfitAmount}\n                                                                    onChange={\n                                                                        takeProfitAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {TakeProfitAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex\n                                                            fd=\"column\"\n                                                            width=\"100%\"\n                                                            ml=\"3px\"\n                                                            mr=\"2rem\"\n                                                        >\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"assetPrice\"\n                                                                    value={values.assetPrice}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {AssetPriceInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"100%\" ml=\"5px\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stopLossAmount\"\n                                                                    value={values.stopLossAmount}\n                                                                    onChange={\n                                                                        stopLossAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {StopLossAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </PnlCalculatorFormMobile>\n                                        </Desktop>\n\n                                        <Mobile>\n                                            <PnlCalculatorFormMobile>\n                                                <PnlHeaderOverflow>\n                                                    <PnlCalculatorHeaderMobile>\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </PnlCalculatorHeaderMobile>\n                                                </PnlHeaderOverflow>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <CalculatorDropdown\n                                                        option_list={values.optionList}\n                                                        label={localize('Symbol')}\n                                                        default_option={optionItemDefault}\n                                                        selected_option={values.symbol}\n                                                        id=\"symbol\"\n                                                        onChange={calculatorDropdownHandler}\n                                                        contractSize={values.contractSize}\n                                                        error={touched.symbol && errors.symbol}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"volume\"\n                                                            value={values.volume}\n                                                            onChange={(value) => {\n                                                                setFieldValue('volume', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"volume\"\n                                                                    type=\"text\"\n                                                                    label={localize('Volume')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.volume &&\n                                                                        errors.volume\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError('volume', '')\n                                                                        setFieldTouched(\n                                                                            'volume',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength={getMaxLength(\n                                                                        values.volume,\n                                                                        8,\n                                                                    )}\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"assetPrice\"\n                                                            value={values.assetPrice}\n                                                            onChange={(value) => {\n                                                                setFieldValue('assetPrice', value)\n                                                            }}\n                                                        >\n                                                            {AssetPriceInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"pointValue\"\n                                                            value={values.pointValue}\n                                                            onChange={(value) => {\n                                                                setFieldValue('pointValue', value)\n                                                            }}\n                                                        >\n                                                            {PointValueInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"takeProfitAmount\"\n                                                            value={values.takeProfitAmount}\n                                                            onChange={takeProfitAmountChangeHandler}\n                                                        >\n                                                            {TakeProfitAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stopLossAmount\"\n                                                            value={values.stopLossAmount}\n                                                            onChange={stopLossAmountChangeHandler}\n                                                        >\n                                                            {StopLossAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </PnlCalculatorFormMobile>\n                                        </Mobile>\n                                    </>\n                                )\n                            }}\n                        </Formik>\n                    </FormWrapper>\n\n                    {tab === 'Buy' ? (\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when buying a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price + {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are buying a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the stop loss level and pip value when you want to buy a lot of EUR/USD priced at 1.17524 USD with a stop loss amount of 24 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Desktop breakpoint={'tablet'}>\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Desktop>\n                                    <Mobile>\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula_mobile}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of forex = 100,000 units.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Desktop breakpoint={'tablet'}>\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Desktop>\n                                    <Mobile>\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula_mobile}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your stop loss level is at <0>1.1750</0> and when your stop loss pip value is <0>24 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary\n                                        external\n                                        type=\"mt5\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    ) : (\n                        <RightContent key={tab}>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when selling a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price - {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are selling a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the take profit level and pip value when you want to sell 3 lots of Volatility 50 Index priced at 249.5961 USD with a take profit amount of 84 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Desktop breakpoint={'tablet'}>\n                                        <QueryImage\n                                            data={data.take_profit_level_formula}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Desktop>\n                                    <Mobile>\n                                        <QueryImage\n                                            data={data.take_profit_level_formula_mobile}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of Volatility 50 Index = 1.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Desktop breakpoint={'tablet'}>\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Desktop>\n                                    <Mobile>\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula_mobile}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 4, so the point value is 0.0001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your take profit level is at <0>221.5961</0> and the pip value is <0>280,000 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary\n                                        external\n                                        type=\"mt5\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    )}\n                </ContentContainer>\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMarginCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMarginCalculatorSection from './_pnl-margin-calculator'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMarginCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Margin Calculator')}\n                description={localize('PnL Margin Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for margin')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMarginCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMarginCalculator)\n"],"names":["optionItemDefault","name","display_name","key","icon","market","leverageItemLists","syntheticItemLists","React","src","BOOM1000","alt","symbol","BOOM500","BOOM300EU","CRASH1000","CRASH500","CRASH300EU","STEPINDICES","MARKETBEARNEW","MARKETBULLNEW","INDEX10S1","INDEX10","INDEX25S1","INDEX25","INDEX50S1","INDEX50","INDEX75S1","INDEX75","INDEX100S1","INDEX100","VINDEXIC200","VINDEXIC300","JUMP10NEW","JUMP25NEW","JUMP50NEW","JUMP75NEW","JUMP100NEW","financialItemLists","AUS200","STOCKSHONGKONG50","JP225","EUR50","FRA40","STOCKSGERMANY30","STOCKSSWISS20","UK100","STOCKSUS500","STOCKSUSTECH100","STOCKSWALLSTREET30","BTCUSD","ETHUSD","AUDJPY","AUDCAD","AUDCHF","AUDNZD","AUDUSD","EURAUD","EURCAD","EURCHF","EURGBP","EURJPY","EURNZD","EURUSD","GBPCHF","GBPJPY","GBPUSD","NZDUSD","USDCAD","USDCHF","USDJPY","USDMXN","USDNOK","USDPLN","USDSEK","GBPAUD","GBPCAD","GBPNZD","NZDJPY","GOLDUSD","SILVERUSD","PALLADIUMUSD","PLATINUMUSD","AUDBASKET","GBPBASKET","EURBASKET","USDBASKET","GOLDBASKET","data","useStaticQuery","formik_ref","useRef","form","current","useState","tab","setTab","sub_tab","setSubTab","stop_loss_output","setStopLossOutput","take_profit_output","setTakeProfitOutput","onTabClick","t","resetForm","setErrors","setFieldValue","onSubTabClick","values","pointValue","getPnlMarginCommon","BreadCrumbContainer","Flex","jc","ai","LocalizedLinkText","to","color","localize","RightArrow","height","width","style","margin","Text","StyledSection","direction","SectionSubtitle","as","type","align","weight","mt","mb","tablet","SwapTabSelector","active","onClick","size","ContentContainer","FormWrapper","Formik","innerRef","enableReinitialize","initialValues","accountType","pnlMarginSymbol","stopLossPips","stopLossLevel","takeProfitPips","takeProfitLevel","volume","takeProfitAmount","optionList","contractSize","assetPrice","stopLossAmount","validate","resetValidationPnlMargin","onSubmit","numberSubmitFormat","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","pnlSyntheticHandler","pnlFinancialHandler","calculatorDropdownHandler","value","getCurrency","getContractSize","takeProfitErrorHanlder","current_input","focus","stopLossErrorHandler","AssetPriceInput","field","Input","id","label","autoComplete","error","onBlur","handleError","maxLength","getMaxLength","background","StopLossAmountInput","PointValueInput","takeProfitAmountChangeHandler","stopLossAmountChangeHandler","TakeProfitAmountInput","Desktop","breakpoint","PnlCalculatorFormMobile","CalculatorHeader","fd","mr","CalculatorLabel","htmlFor","PnLCalculatorOutputContainer","PnLCalculatorOutputField","PnLCalculatorOutputSymbol","CalculatorBody","PnlCalculatorTabItem","disabled","ml","CalculatorDropdown","option_list","default_option","selected_option","onChange","PnLInputGroup","Field","CalculateButton","secondary","Mobile","PnlHeaderOverflow","PnlCalculatorHeaderMobile","InputGroup","RightContent","Header","Localize","translate_text","components","Accordion","has_single_state","AccordionItem","header","header_style","padding","plus","QueryImage","stop_loss_level_formula","stop_loss_level_formula_mobile","FormulaText","StyledOl","stop_loss_pip_formula","stop_loss_pip_formula_mobile","LinkWrapper","StyledLinkButton","external","target","rel","take_profit_level_formula","take_profit_level_formula_mobile","take_profit_pip_formula","take_profit_pip_formula_mobile","WithIntl","Layout","SEO","title","description","Hero","Container","StyledHeader","PnLMarginCalculatorSection"],"sourceRoot":""}