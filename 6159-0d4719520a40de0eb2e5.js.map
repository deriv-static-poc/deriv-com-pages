{"version":3,"file":"6159-0d4719520a40de0eb2e5.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/deriv-go/components/_tabs.tsx","webpack://deriv-com/./src/pages/deriv-go/_start-deriv-go.tsx"],"sourcesContent":["import React, { useEffect, ReactElement } from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { Flex, Show } from 'components/containers'\nimport { Text } from 'components/elements'\nimport device from 'themes/device'\n\nconst TabContent = styled.div`\n    flex: 1;\n    width: 100%;\n\n    & .content-wrapper {\n        width: 287px;\n        height: 576px;\n        @media ${device.tabletL} {\n            width: 192px;\n            height: 386px;\n        }\n    }\n`\nconst TabButton = styled(Flex)`\n    position: relative;\n    z-index: 2;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 40px;\n    width: 428px;\n    cursor: pointer;\n    margin-left: 9rem;\n\n    @media ${device.tabletL} {\n        width: fit-content;\n        padding-top: 10px;\n        margin-left: 0;\n    }\n`\nconst TabList = styled.div<{ is_reverse: boolean }>`\n    max-width: 100%;\n    ${(props) =>\n        props.is_reverse\n            ? css`\n                  margin-left: 2.4rem;\n              `\n            : css`\n                  margin-right: 2.4rem;\n              `}\n`\nconst TabListWrapper = styled.div`\n    max-width: 28.2rem;\n    display: flex;\n    flex-direction: column;\n\n    @media ${device.tabletL} {\n        max-width: 100%;\n        margin: 0;\n    }\n`\nconst animateTab = keyframes`\n    0% {opacity:0;}\n    100% {opacity:1;}\n\n`\nconst TextLabel = styled(Text)`\n    color: ${(props) => (props.selected ? 'rgba(51, 51, 51, 1)' : 'rgba(153, 153, 153, 1)')};\n    font-size: 32px;\n    animation: ${animateTab} 2s;\n\n    @media ${device.tabletL} {\n        font-size: 24px;\n    }\n`\nconst TextDesc = styled(Text)`\n    display: ${(props) => (!props.selected ? 'none' : '')};\n    font-size: 24px;\n    animation: ${animateTab} 2s;\n\n    @media ${device.tabletL} {\n        font-size: 18px;\n    }\n`\nconst Content = styled(Flex)`\n    display: grid;\n    justify-content: center;\n    padding-left: 16rem;\n    padding-top: 60px;\n    @media ${device.tabletL} {\n        padding-top: 24px;\n        padding-left: 0;\n    }\n`\nconst CarouselDot = styled.div<{ selected: boolean }>`\n    height: 12px;\n    align-self: center;\n    width: 12px;\n    border-radius: 50%;\n    border: ${(props) => (props.selected ? 'none' : '1px solid #000000')};\n    margin-bottom: 16px;\n    background-color: ${(props) =>\n        props.selected ? 'rgba(255, 68, 79, 1)' : 'rgba(248, 250, 251, 1)'};\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\nconst CarouselContainer = styled.div`\n    height: 80px;\n    align-self: center;\n    margin-right: 36px;\n`\nconst Desktop = styled(Show.Desktop)`\n    flex: 1;\n    width: 100%;\n`\nconst Mobile = styled(Show.Mobile)`\n    @media ${device.tabletL} {\n        margin-top: 0.8rem;\n        margin-bottom: 0;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    @media ${device.mobileL} {\n        margin-top: 0.8rem;\n        margin-bottom: 0;\n    }\n`\n\ntype TabsProps = {\n    children: ReactElement[]\n    label?: ReactElement\n    description?: ReactElement\n    className?: string\n    is_reverse?: boolean\n    max_width?: string\n}\n\ntype TabPanelProps = Pick<TabsProps, 'children' | 'className' | 'label' | 'description'>\n\nconst TabPanel = ({ children, className }: TabPanelProps) => (\n    <TabContent className={className} role=\"tabpanel\">\n        {children}\n    </TabContent>\n)\n\nconst Tabs = ({ children, is_reverse, className, max_width }: TabsProps) => {\n    const [selected_tab, setSelectedTab] = React.useState(0)\n\n    useEffect(() => {\n        let timer\n        if (selected_tab >= 2) {\n            timer = setTimeout(() => setSelectedTab(0), 3000)\n        } else {\n            timer = setTimeout(() => setSelectedTab(selected_tab + 1), 3000)\n        }\n\n        return () => {\n            clearTimeout(timer)\n        }\n    }, [selected_tab, setSelectedTab])\n\n    return (\n        <Flex className={className} ai=\"center\" direction={is_reverse ? 'row-reverse' : 'row'}>\n            <TabListWrapper className=\"side-tab__wrapper\">\n                <TabList className=\"side-tab__list\" role=\"tablist\" is_reverse={is_reverse}>\n                    {React.Children.map(children, (child, index) => {\n                        const {\n                            props: { label, description },\n                        } = child\n                        return (\n                            <>\n                                <TabButton\n                                    className=\"side-tab__button\"\n                                    role=\"tab\"\n                                    selected={selected_tab === index}\n                                    aria-selected={selected_tab === index ? 'true' : 'false'}\n                                    onClick={() => setSelectedTab(index)}\n                                >\n                                    <TextLabel\n                                        selected={selected_tab === index}\n                                        className=\"side-tab__label\"\n                                        weight=\"bold\"\n                                    >\n                                        {label}\n                                    </TextLabel>\n                                    <TextDesc\n                                        selected={selected_tab === index}\n                                        className=\"side-tab__description\"\n                                        mt=\"0.8rem\"\n                                    >\n                                        {description}\n                                    </TextDesc>\n                                </TabButton>\n                                <Mobile\n                                    className=\"side-tab__mobile\"\n                                    min_width={max_width || 'tabletL'}\n                                >\n                                    <Content>{selected_tab === index ? child : undefined}</Content>\n                                </Mobile>\n                            </>\n                        )\n                    })}\n                </TabList>\n            </TabListWrapper>\n            <Desktop className=\"side-tab__desktop\" max_width={max_width || 'tabletL'}>\n                <Content>\n                    {React.Children.map(children, (el, index) => {\n                        return selected_tab === index ? el : undefined\n                    })}\n                </Content>\n            </Desktop>\n            <CarouselContainer>\n                {React.Children.map(children, (child, index) => (\n                    <CarouselDot selected={selected_tab === index} />\n                ))}\n            </CarouselContainer>\n        </Flex>\n    )\n}\n\nTabs.Panel = TabPanel\n\nexport default Tabs\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport SideTab from './components/_tabs'\nimport { Localize, localize, LocalizedLink } from 'components/localization'\nimport { SectionContainer, Container } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport device from 'themes/device'\n\nconst query = graphql`\n    query {\n        sign_up: file(relativePath: { eq: \"deriv-go/create-account.png\" }) {\n            ...fadeIn\n        }\n        fund: file(relativePath: { eq: \"deriv-go/fund-account.png\" }) {\n            ...fadeIn\n        }\n        trading: file(relativePath: { eq: \"deriv-go/get-trading.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst SmallContainer = styled(Container)`\n    width: 100%;\n    @media ${device.tabletL} {\n        width: 90%;\n        padding: 0;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.mobileL} {\n        font-size: 32px;\n        padding: 0 35px;\n    }\n    @media ${device.mobileM} {\n        padding: 0 20px;\n    }\n`\nconst StyledLocalizedLink = styled(LocalizedLink)`\n    text-decoration: none;\n    color: rgba(255, 68, 79, 1);\n\n    &:hover {\n        text-decoration: underline;\n    }\n`\n\nconst StartDerivGo = () => {\n    const data = useStaticQuery(query)\n    return (\n        <SectionContainer height=\"887px\" tabletL={{ height: 'fit-content', p: '40px 0 0' }}>\n            <SmallContainer direction=\"column\">\n                <StyledHeader as=\"h2\" type=\"heading-2\" align=\"center\" mb=\"4rem\">\n                    {localize('How to get started with Deriv GO')}\n                </StyledHeader>\n                <SideTab>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"1. Create your Deriv account\" />}\n                        description={\n                            <Localize\n                                translate_text=\"<0>Sign up</0> with your email, Facebook, or Google account.\"\n                                components={[<StyledLocalizedLink to=\"/signup/\" key={0} />]}\n                            />\n                        }\n                    >\n                        <QueryImage\n                            data={data['sign_up']}\n                            alt=\"Create account on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"2. Fund your account\" />}\n                        description={\n                            <Localize translate_text=\"Fund your account with your preferred payment method.\" />\n                        }\n                    >\n                        <QueryImage\n                            data={data['fund']}\n                            alt=\"Fund your account and start trading on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"3. Get Trading\" />}\n                        description={\n                            <Localize translate_text=\"Download the app and trade anytime, anywhere.\" />\n                        }\n                    >\n                        <QueryImage\n                            data={data['trading']}\n                            alt=\"Start trading on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                </SideTab>\n            </SmallContainer>\n        </SectionContainer>\n    )\n}\n\nexport default StartDerivGo\n"],"names":["TabContent","styled","device","TabButton","Flex","withConfig","TabList","props","is_reverse","css","TabListWrapper","animateTab","keyframes","TextLabel","Text","selected","TextDesc","Content","CarouselDot","CarouselContainer","Desktop","Show","Mobile","Tabs","children","className","max_width","React","selected_tab","setSelectedTab","useEffect","timer","setTimeout","clearTimeout","ai","direction","role","child","index","label","description","onClick","weight","mt","min_width","undefined","el","Panel","SmallContainer","Container","StyledHeader","Header","StyledLocalizedLink","LocalizedLink","data","useStaticQuery","SectionContainer","height","tabletL","p","as","type","align","mb","localize","SideTab","Localize","translate_text","components","to","key","QueryImage","alt"],"sourceRoot":""}