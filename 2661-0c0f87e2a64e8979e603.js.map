{"version":3,"file":"2661-0c0f87e2a64e8979e603.js","mappings":"2NAiBMA,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,8OAgBPC,GAAoBD,EAAAA,EAAAA,SAAOE,EAAAA,IAAVC,WAAA,sEAAGH,CAAH,0LAEK,SAACI,GAAD,OAAWA,EAAMC,kBAFtB,IAYjBC,EAAiBN,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,uLASPO,EAAAA,EAAAA,SAaPC,GAAeR,EAAAA,EAAAA,SAAOE,EAAAA,IAAVC,WAAA,iEAAGH,CAAH,4OAyBZS,EAAcT,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,mJAWXU,EAAaV,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,2EAQVW,GAAeX,EAAAA,EAAAA,SAAOY,EAAAA,IAAVT,WAAA,iEAAGH,CAAH,yHAELO,EAAAA,EAAAA,SA4Cb,UAnCgB,SAAC,GAAkE,IAAhEM,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,KAAMT,EAAkD,EAAlDA,mBAAoBU,EAA8B,EAA9BA,UAC1CC,GAAeC,EAAAA,EAAAA,KACrB,GAA0BC,EAAAA,EAAAA,KAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,OACIC,EAAAA,cAACtB,EAAD,KACIsB,EAAAA,cAACf,EAAD,KACIe,EAAAA,cAACb,EAAD,CAAcc,GAAG,UACZF,GACGC,EAAAA,cAACE,EAAAA,GAAD,CAAYT,KAAMA,EAAI,eAAoBU,IAAKT,EAAWU,MAAM,SAEnEN,GACGE,EAAAA,cAACE,EAAAA,GAAD,CAAYT,KAAMA,EAAI,kBAAuBU,IAAKT,EAAWU,MAAM,WAI/EJ,EAAAA,cAACpB,EAAD,CACII,mBAAoBA,EACpBqB,UAAU,SACVJ,GAAG,WAEPD,EAAAA,cAACZ,EAAD,KACIY,EAAAA,cAACV,EAAD,CAAcgB,GAAG,KAAKC,MAAM,SAASC,MAAM,QAAQC,KAAK,SAASC,GAAG,UAC/DlB,GAELQ,EAAAA,cAACX,EAAD,KACIW,EAAAA,cAACW,EAAAA,GAAD,CAAQC,QAASjB,EAAckB,GAAG,oBAAoBC,KAAK,SAASC,WAAS,IACxEC,EAAAA,EAAAA,IAAS,+BA3BlC,C","sources":["webpack://deriv-com/./src/components/custom/_dbanner.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport type { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { Flex } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { Button } from 'components/form'\nimport { localize } from 'components/localization'\nimport device from 'themes/device'\nimport useHandleSignup from 'components/hooks/use-handle-signup'\nimport { useCountryRule } from 'components/hooks/use-country-rule'\n\ntype DBannerProps = {\n    background_pattern?: string\n    data?: IGatsbyImageData\n    image_alt?: string\n    title?: string | JSX.Element\n}\nconst Wrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    height: 33.3rem;\n    width: 100%;\n    overflow: hidden;\n    border-top: 1px solid rgba(151, 151, 151, 0.2);\n    background-color: var(--color-black);\n\n    @media (max-width: 800px) {\n        flex-direction: column;\n        height: 414px;\n    }\n`\n\nconst BackgroundWrapper = styled(Flex)<DBannerProps>`\n    width: 25%;\n    background-image: url(${(props) => props.background_pattern});\n    clip-path: polygon(0 0, 100% 0%, 80% 100%, 0% 100%);\n\n    @media (max-width: 800px) {\n        clip-path: polygon(0 0, 100% 0%, 305% 163%, 0% 60%);\n        width: 100%;\n        height: 50%;\n    }\n`\n\nconst ImageContainer = styled.div`\n    position: absolute;\n    left: 10%;\n    height: 100%;\n\n    @media (max-width: 1680px) {\n        left: 7%;\n    }\n\n    @media ${device.laptopL} {\n        left: 5%;\n    }\n\n    @media (max-width: 800px) {\n        left: 0;\n        height: unset;\n        width: 100%;\n        top: 12%;\n        margin-bottom: 2rem;\n    }\n`\n\nconst ImageWrapper = styled(Flex)`\n    position: relative;\n    width: 41.1rem;\n    z-index: 2;\n    height: 100%;\n\n    div {\n        width: 100%;\n    }\n\n    @media (max-width: 1680px) {\n        width: 35rem;\n    }\n\n    @media (max-width: 1440px) {\n        width: 30rem;\n    }\n    @media (max-width: 800px) {\n        height: auto;\n        width: 286px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst TextWrapper = styled.div`\n    margin: auto;\n\n    @media (max-width: 800px) {\n        margin-top: 35px;\n        margin-bottom: 40px;\n    }\n    @media (min-width: 1351px) and (max-width: 1385px) {\n        margin-right: 60px;\n    }\n`\nconst DemoButton = styled.div`\n    text-align: center;\n    height: auto;\n\n    @media (max-width: 800px) {\n        margin: unset;\n    }\n`\nconst StyledHeader = styled(Header)`\n    max-width: 84rem;\n    @media ${device.laptopM} {\n        font-size: 4rem;\n        max-width: 60rem;\n    }\n    @media (max-width: 800px) {\n        font-size: 24px;\n        max-width: 329px;\n    }\n`\nconst DBanner = ({ title, data, background_pattern, image_alt }: DBannerProps) => {\n    const handleSignup = useHandleSignup()\n    const { is_eu, is_row } = useCountryRule()\n\n    return (\n        <Wrapper>\n            <ImageContainer>\n                <ImageWrapper ai=\"center\">\n                    {is_row && (\n                        <QueryImage data={data['deriv_platform']} alt={image_alt} width=\"100%\" />\n                    )}\n                    {is_eu && (\n                        <QueryImage data={data['deriv_platform_eu']} alt={image_alt} width=\"100%\" />\n                    )}\n                </ImageWrapper>\n            </ImageContainer>\n            <BackgroundWrapper\n                background_pattern={background_pattern}\n                direction=\"column\"\n                ai=\"center\"\n            ></BackgroundWrapper>\n            <TextWrapper>\n                <StyledHeader as=\"h4\" align=\"center\" color=\"white\" size=\"5.6rem\" mb=\"3.2rem\">\n                    {title}\n                </StyledHeader>\n                <DemoButton>\n                    <Button onClick={handleSignup} id=\"dm-dbanner-signup\" type=\"submit\" secondary>\n                        {localize('Create free demo account')}\n                    </Button>\n                </DemoButton>\n            </TextWrapper>\n        </Wrapper>\n    )\n}\n\nexport default DBanner\n"],"names":["Wrapper","styled","BackgroundWrapper","Flex","withConfig","props","background_pattern","ImageContainer","device","ImageWrapper","TextWrapper","DemoButton","StyledHeader","Header","title","data","image_alt","handleSignup","useHandleSignup","useCountryRule","is_eu","is_row","React","ai","QueryImage","alt","width","direction","as","align","color","size","mb","Button","onClick","id","type","secondary","localize"],"sourceRoot":""}